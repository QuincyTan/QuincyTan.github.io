<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Quincy&#39;s Blog</title>
  
  <subtitle>芳林新叶催陈叶，流水前波让后波</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="quincy.ink/"/>
  <updated>2019-03-07T15:20:00.754Z</updated>
  <id>quincy.ink/</id>
  
  <author>
    <name>Quincy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>物联网概论 学习笔记</title>
    <link href="quincy.ink/%E7%89%A9%E8%81%94%E7%BD%91%E6%A6%82%E8%AE%BA-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/物联网概论-学习笔记.html</id>
    <published>2019-03-07T15:06:49.000Z</published>
    <updated>2019-03-07T15:20:00.754Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>物联网（IoT）：Internet of Things</p></li><li><p>物联网是具有自我<font color="Red">标示、感知和智能</font>的物理实体基于通信技术相互连接形成的网络，这些物理设备可以在<font color="Red">无需人工干预</font>的条件下实现<font color="Red">协同和互动</font>，为人们提供<font color="Red">智慧和集约的服务</font>，传感网是物联网的基础，是物联网的组成部分</p></li><li><p>物联网三层体系结构：感知层、网络层和应用层</p><p>感知层是物联网的皮肤和五官——识别物体，采集信息；</p><p>网络层是物联网的神经中枢和大脑——信息传递和处理；</p><p>应用层是物联网的“社会分工”——与行业需求结合，实现广泛智能化</p><a id="more"></a></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;物联网（IoT）：Internet of Things&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;物联网是具有自我&lt;font color=&quot;Red&quot;&gt;标示、感知和智能&lt;/font&gt;的物理实体基于通信技术相互连接形成的网络，这些物理设备可以在&lt;font color=&quot;Red&quot;&gt;无需人工干预&lt;/font&gt;的条件下实现&lt;font color=&quot;Red&quot;&gt;协同和互动&lt;/font&gt;，为人们提供&lt;font color=&quot;Red&quot;&gt;智慧和集约的服务&lt;/font&gt;，传感网是物联网的基础，是物联网的组成部分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;物联网三层体系结构：感知层、网络层和应用层&lt;/p&gt;
&lt;p&gt;感知层是物联网的皮肤和五官——识别物体，采集信息；&lt;/p&gt;
&lt;p&gt;网络层是物联网的神经中枢和大脑——信息传递和处理；&lt;/p&gt;
&lt;p&gt;应用层是物联网的“社会分工”——与行业需求结合，实现广泛智能化&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="物联网概论" scheme="quincy.ink/categories/%E7%89%A9%E8%81%94%E7%BD%91%E6%A6%82%E8%AE%BA/"/>
    
    
      <category term="物联网概论" scheme="quincy.ink/tags/%E7%89%A9%E8%81%94%E7%BD%91%E6%A6%82%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>概率论与数理统计 学习笔记</title>
    <link href="quincy.ink/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/概率论与数理统计-学习笔记.html</id>
    <published>2019-03-04T01:31:59.000Z</published>
    <updated>2019-03-07T15:20:15.139Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="第一章-随机事件及其概率"><a href="#第一章-随机事件及其概率" class="headerlink" title="第一章 随机事件及其概率"></a>第一章 随机事件及其概率</h3><h3 id="第二章-随机变量及其分布"><a href="#第二章-随机变量及其分布" class="headerlink" title="第二章 随机变量及其分布"></a>第二章 随机变量及其分布</h3><h3 id="第三章-多维随机变量及其分布"><a href="#第三章-多维随机变量及其分布" class="headerlink" title="第三章 多维随机变量及其分布"></a>第三章 多维随机变量及其分布</h3><h3 id="第四章-随机变量的数字特征"><a href="#第四章-随机变量的数字特征" class="headerlink" title="第四章 随机变量的数字特征"></a>第四章 随机变量的数字特征</h3><h3 id="第五章-大数定律与中心极限定理"><a href="#第五章-大数定律与中心极限定理" class="headerlink" title="第五章 大数定律与中心极限定理"></a>第五章 大数定律与中心极限定理</h3><h3 id="第六章-数理统计的基本概念与抽样分析"><a href="#第六章-数理统计的基本概念与抽样分析" class="headerlink" title="第六章 数理统计的基本概念与抽样分析"></a>第六章 数理统计的基本概念与抽样分析</h3><h3 id="第七章-参数估计"><a href="#第七章-参数估计" class="headerlink" title="第七章 参数估计"></a>第七章 参数估计</h3><h3 id="第八章-假设验证"><a href="#第八章-假设验证" class="headerlink" title="第八章 假设验证"></a>第八章 假设验证</h3><p><br></p><p><br></p><p>待更…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
      <category term="概率论与数理统计" scheme="quincy.ink/categories/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
    
      <category term="概率论与数理统计" scheme="quincy.ink/tags/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络(第7版)-谢希仁 学习笔记</title>
    <link href="quincy.ink/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC7%E7%89%88-%E8%B0%A2%E5%B8%8C%E4%BB%81-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/计算机网络-第7版-谢希仁-学习笔记.html</id>
    <published>2019-03-03T11:19:16.000Z</published>
    <updated>2019-03-07T15:57:37.839Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="第1章-概述"><a href="#第1章-概述" class="headerlink" title="第1章 概述"></a>第1章 概述</h3><h4 id="1-1-计算机网络在信息时代中的作用"><a href="#1-1-计算机网络在信息时代中的作用" class="headerlink" title="1.1 计算机网络在信息时代中的作用"></a>1.1 计算机网络在信息时代中的作用</h4><p>网络分类：电信网络、有线电视网络和计算机网络</p><p>互联网基本特点：</p><p>①连通性：互联网用户不管距离多远，都能通信，就像这些用户终端都彼此连通</p><p>②共享：指资源共享，包含信息、软件、硬件等共享，就像资源在用户身边</p><h4 id="1-2-互联网概述"><a href="#1-2-互联网概述" class="headerlink" title="1.2 互联网概述"></a>1.2 互联网概述</h4><p>计算机网络组成：由若干结点和连接这些结点的链路组成；结点可以是计算机、集线器、交换机或路由器等</p><p>互连网：网络之间通过路由互连起来，形成更大的网络，是网络的网络</p><p>主机(host)：与网络相连的计算机</p><h4 id="1-3-互联网的组成"><a href="#1-3-互联网的组成" class="headerlink" title="1.3 互联网的组成"></a>1.3 互联网的组成</h4><p>从工作方式上分为：</p><p>(1) 边缘部分：由互联网上的主机组成，是用户直接使用的部分，用来进行通信和资源共享</p><p>端系统：主机</p><p>计算机之间的通信：主机A上的进程与主机B上的进程进行通信</p><p>端系统间通信方式：</p><p>①客户-服务器方式</p><p><img src="/计算机网络-第7版-谢希仁-学习笔记.html计算机网络-第7版-谢希仁-学习笔记/1.3.1.jpg" alt=""></p><p>客户和服务器：指通信中涉及的两个应用进程</p><p>主要特点：客户是服务请求方（主动发起请求服务，需要知道服务器地址），服务器是服务提供方（可同时处理多个服务请求，需要强大的硬件和高级的操作系统支持）</p><p>②对等连接方式</p><p><img src="/计算机网络-第7版-谢希仁-学习笔记.html计算机网络-第7版-谢希仁-学习笔记/1.3.2.jpg" alt=""></p><p>两台主机不区分服务器和客户，只要都运行p2p软件，就可以进行平等对等连接通信，双方都可访问对方硬盘中的共享文档。可支持大量对等用户同时工作</p><p><br></p><p>(2) 核心部分：由大量网络和连接这些网络的路由器组成，是为边缘部分提供服务的，提供连通性和交换</p><p><br></p><h3 id="第2章-物理层"><a href="#第2章-物理层" class="headerlink" title="第2章 物理层"></a>第2章 物理层</h3><p><br></p><h3 id="第3章-数据链路层"><a href="#第3章-数据链路层" class="headerlink" title="第3章 数据链路层"></a>第3章 数据链路层</h3><p><br></p><h3 id="第4章-网络层"><a href="#第4章-网络层" class="headerlink" title="第4章 网络层"></a>第4章 网络层</h3><p><br></p><h3 id="第5章-运输层"><a href="#第5章-运输层" class="headerlink" title="第5章 运输层"></a>第5章 运输层</h3><p><br></p><h3 id="第6章-应用层"><a href="#第6章-应用层" class="headerlink" title="第6章 应用层"></a>第6章 应用层</h3><p><br></p><p><br></p><p>待更…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="quincy.ink/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="quincy.ink/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛-41</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B-41.html"/>
    <id>quincy.ink/牛客练习赛-41.html</id>
    <published>2019-03-03T02:33:31.000Z</published>
    <updated>2019-03-03T05:27:21.099Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/373#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/373#question</a></p><blockquote><p><strong>A 翻硬币问题</strong></p></blockquote><p><strong>题意：</strong>A和B玩游戏，A先手，要将n个正面硬币翻转为反面且每次只能翻转m个，B有一次可以在A翻转后将一枚硬币翻转的机会，给出n,m问A是否能将所有硬币翻转<a id="more"></a></p><p><strong>思路：</strong> 简单签到题，容易想到：</p><p>​        当n&lt;m时，A翻不了</p><p>​        当n==m时，A可以一下就翻完</p><p>​        当n&gt;m时，无论A是否刚好翻完，B都可以打乱</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">if</span>(n==m) <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">else</span>     <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>B 666RGP</strong></p></blockquote><p><strong>题意：</strong>给出n个数(n&lt;=300,-666&lt;=ai&lt;=666)，分数开始初值为0，对于第i个数有两种操作，一是分数+a[i],二是分数*(-1)，问经过n个数后有多少种方法分数变为-666，且中间分数不能出现666，答案对1e8+7取模</p><p><strong>思路：</strong>简单计数dp</p><p>设dp[i] [j]表示，经过第i个数后分数为j的答案，那么有dp[i] [j] = dp[i-1] [j - a[i]] + dp[i-1] [-j]</p><p>注意过滤掉j==666的情况</p><p>因为j最大会有2*300*666 这么大，如果开dp[300] [2*300*666] 肯定空间不够</p><p>考虑转移方程只和i 和 i-1有关，可以用滚动数组形式优化</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxv = <span class="number">700</span>*<span class="number">300</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e8</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">2</span>][maxv*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">305</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    dp[<span class="number">0</span>][maxv]=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">-666</span>*n;j&lt;=<span class="number">666</span>*n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">666</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i&amp;<span class="number">1</span>][j+maxv]=(dp[(i<span class="number">-1</span>)&amp;<span class="number">1</span>][-j+maxv]+dp[(i<span class="number">-1</span>)&amp;<span class="number">1</span>][j-a[i]+maxv])%P;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n&amp;<span class="number">1</span>][<span class="number">-666</span>+maxv]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>C 抓捕盗窃犯</strong></p></blockquote><p><strong>题意：</strong>在n点中，第i个点有ai个人，再给出下一时刻第i个点的所有人转移到vi点，问在m个地方建立哨卡（可以一直监控当地经过的人），最多可以监视到多少人</p><p><strong>思路：</strong></p><p>n个点，每个点有一条有向出边</p><p>容易想到这些点将组成一些块</p><p>且每个块内都有一个环</p><p>这样，一个块的所有地点的人都会经过环</p><p>那么用并查集整合n个地点人口，再取前m大就行</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn];</span><br><span class="line">ll a[maxn],b[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==x?x:f[x]=get(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=i;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> to;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;to);</span><br><span class="line">        <span class="keyword">int</span> x=get(i),y=get(to);</span><br><span class="line">        <span class="keyword">if</span>(x!=y)&#123;</span><br><span class="line">            f[x]=y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> f=get(i);</span><br><span class="line">        b[f]+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;n-m;i--)&#123;</span><br><span class="line">        ans+=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>D 最小相似度</strong></p></blockquote><p><strong>题意：</strong>给出n个m长的二进制01串，问构造一个m长的01串使得这个串和这n个串对应位相同的数量最大的最小值</p><p><strong>思路：</strong>将n个串都作为起点进行bfs，搜索完所有2^m内的数，dp[i]表示从某个起点到i需要翻转的位数，既有多少位与原先某个串不相同，m-max(dp[i]) 即为最小相同的位数</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">3e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1</span>&lt;&lt;<span class="number">20</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">25</span>];</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*((<span class="number">1</span>&lt;&lt;m)+<span class="number">5</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            tmp+=(<span class="number">1</span>&lt;&lt;j)*(s[j]-<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[tmp]=<span class="number">0</span>;</span><br><span class="line">        q.push(tmp);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[u^(<span class="number">1</span>&lt;&lt;j)]!=<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[u^(<span class="number">1</span>&lt;&lt;j)]=dp[u]+<span class="number">1</span>;</span><br><span class="line">            q.push(u^(<span class="number">1</span>&lt;&lt;j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    bfs();</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++) ans=max(ans,dp[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,m-ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>E 球的体积并</strong></p></blockquote><p><strong>题意：</strong>给出两个球的球心坐标和半径，求两球相交体积</p><p><strong>思路：</strong>球冠体积公式(h为球冠高，r为球半径,d为球心距)</p><script type="math/tex; mode=display">V=PI*h(3a^2+h^2)/6=PI*h^2(3r-h)/3</script><script type="math/tex; mode=display">h=r-(ra^2-rb^2+d^2)/2d</script><p>注意外离、外切、内含的几种情况需特判</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y,z;</span><br><span class="line">    point() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    point(<span class="keyword">double</span> a, <span class="keyword">double</span> b,<span class="keyword">double</span> c) &#123;</span><br><span class="line">        x = a;</span><br><span class="line">        y = b;</span><br><span class="line">        z = c;</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> -(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;     <span class="comment">//返回减去后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x - b.x, y - b.y,z-b.z);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> +(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;     <span class="comment">//返回加上后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x + b.x, y + b.y,z+b.z);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> *(<span class="keyword">const</span> <span class="keyword">double</span> &amp;k)<span class="keyword">const</span> &#123;    <span class="comment">//返回相乘后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x * k, y * k,z*k);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> /(<span class="keyword">const</span> <span class="keyword">double</span> &amp;k)<span class="keyword">const</span> &#123;    <span class="comment">//返回相除后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x / k, y / k,z/k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> *(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;    <span class="comment">//点乘</span></span><br><span class="line">        <span class="keyword">return</span> x*b.x + y*b.y+z*b.z;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; point;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist</span><span class="params">(point p1, point p2)</span> </span>&#123;       <span class="comment">//返回平面上两点距离</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((p1 - p2)*(p1 - p2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sphere</span> &#123;</span><span class="comment">//球</span></span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    point centre;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">v</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4.0</span>/<span class="number">3</span>*PI*r*r*r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; sphere;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">(sphere a, sphere b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> d = dist(a.centre, b.centre);<span class="comment">//球心距</span></span><br><span class="line">    <span class="comment">//double t = (d*d + a.r*a.r - b.r*b.r) / (2.0 * d);//</span></span><br><span class="line">    <span class="comment">//double h = sqrt((a.r*a.r) - (t*t)) * 2;//h1=h2，球冠的高</span></span><br><span class="line">    <span class="comment">//double angle_a = 2 * acos((a.r*a.r + d*d - b.r*b.r) / (2.0 * a.r*d));  //余弦公式计算r1对应圆心角，弧度</span></span><br><span class="line">    <span class="comment">//double angle_b = 2 * acos((b.r*b.r + d*d - a.r*a.r) / (2.0 * b.r*d));  //余弦公式计算r2对应圆心角，弧度</span></span><br><span class="line">    <span class="keyword">if</span>(d-a.r-b.r&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,a.v()+b.v());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d+a.r&lt;b.r||d+b.r&lt;a.r)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,max(a.v(),b.v()));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> l1 = (a.r*a.r - b.r*b.r + d*d) / (<span class="number">2</span>*d);</span><br><span class="line">    <span class="keyword">double</span> l2 = (b.r*b.r - a.r*a.r + d*d) / (<span class="number">2</span>*d);</span><br><span class="line">    <span class="keyword">double</span> h1 = a.r - l1, h2 = b.r - l2;<span class="comment">//分别为两个球缺的高度</span></span><br><span class="line">    <span class="keyword">double</span> v1 = PI*h1*h1*(a.r - h1 / <span class="number">3</span>);<span class="comment">//相交部分r1圆所对应的球缺部分体积</span></span><br><span class="line">    <span class="keyword">double</span> v2 = PI*h2*h2*(b.r - h2 / <span class="number">3</span>);<span class="comment">//相交部分r2圆所对应的球缺部分体积</span></span><br><span class="line">    <span class="keyword">double</span> v = v1 + v2;<span class="comment">//相交部分体积</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,a.v()+b.v()-v);</span><br><span class="line">    <span class="comment">//double s1 = PI*a.r*x1;  //r1对应球冠表面积</span></span><br><span class="line">    <span class="comment">//double s2 = PI*a.r*x2;  //r2对应球冠表面积</span></span><br><span class="line">    <span class="comment">//double s = 4 * PI*(a.r*a.r + b.r*b.r) - s1 - s2;//剩余部分表面积</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sphere a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;a.centre.x,&amp;a.centre.y,&amp;a.centre.z,&amp;a.r);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;b.centre.x,&amp;b.centre.y,&amp;b.centre.z,&amp;b.r);</span><br><span class="line">    Solve(a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>F 简单数学题</strong></p></blockquote><p>数学弃…</p><p><br></p><p>岑巨出的题，难度适中，B题dp因为没注意要从dp[0] [maxv]开始初始化debug了很久</p><p>C题想到了并查集竟然不想写</p><p>E题内含的条件写错了，一直以为公式错了QAQ</p><p>还是大意了啊</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/373#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/373#question&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A 翻硬币问题&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;A和B玩游戏，A先手，要将n个正面硬币翻转为反面且每次只能翻转m个，B有一次可以在A翻转后将一枚硬币翻转的机会，给出n,m问A是否能将所有硬币翻转&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="数学" scheme="quincy.ink/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="bfs" scheme="quincy.ink/tags/bfs/"/>
    
      <category term="dp" scheme="quincy.ink/tags/dp/"/>
    
      <category term="并查集" scheme="quincy.ink/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>牛客OI周赛7-普及组</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2OI%E5%91%A8%E8%B5%9B7-%E6%99%AE%E5%8F%8A%E7%BB%84.html"/>
    <id>quincy.ink/牛客OI周赛7-普及组.html</id>
    <published>2019-02-24T08:16:20.000Z</published>
    <updated>2019-02-24T08:56:54.228Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/372#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/372#question</a></p><blockquote><p><strong>A 救救猫咪</strong></p></blockquote><p> 暴力</p><blockquote><p><strong>B 救救兔子</strong></p></blockquote><p><strong>题意：</strong>给出n长数组，m个询问，每次询问给出一个x，要求数组中与x差距最小的数(如果差距相等，输出较小的那个)<a id="more"></a></p><p><strong>思路：</strong></p><p>二分，原数组排序后用upper_lowbound() 找出第一个比x大元素的位置，在分别比较当前位置和当前位置-1的数与x的差距，注意比第一个数小和最后一个数大的时候需特判</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=a[n<span class="number">-1</span>])    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[n<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x&lt;=a[<span class="number">0</span>]) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> pos=upper_bound(a,a+n,x)-a;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(a[pos<span class="number">-1</span>]-x) &lt;= <span class="built_in">abs</span>(a[pos]-x)) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[pos<span class="number">-1</span>]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[pos]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>C 救救企鹅</strong></p></blockquote><p><strong>题意:</strong>  给出字符串s,a,b(长度&lt;=1e6),要求输出将s中所有a替换为b后的字符串</p><p><strong>思路:</strong>  kmp或hash求出s中与a匹配的位置,再替换一下即可</p><p>比赛的时候没有注意到a,b串的长度可以不相等 只过了50%qwq</p><p>赛后发现用Java或Python都可以直接秒这题tql</p><p><strong>代码:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> lens,lena,lenb;</span><br><span class="line">ull base=<span class="number">131</span>;</span><br><span class="line">ull p[maxn],hs[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geth</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-hs[l<span class="number">-1</span>]*p[r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pos;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,s+<span class="number">1</span>,a+<span class="number">1</span>,b+<span class="number">1</span>);</span><br><span class="line">    lens=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    lena=lenb=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">    ull tt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lena;i++) tt=tt*base+(ull)a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++) hs[i]=hs[i<span class="number">-1</span>]*base+(ull)s[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens-lena+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        ull ss=geth(i,i+lena<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span>(ss==tt)&#123;</span><br><span class="line">            pos.push_back(i);</span><br><span class="line">            i+=lena<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;pos.size();i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(k!=pos[i])&#123;</span><br><span class="line">            <span class="built_in">putchar</span>(s[k]);</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>,b+<span class="number">1</span>);</span><br><span class="line">        k+=lena;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(k&lt;=lens)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(s[k]);</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>D 数糖纸</strong></p></blockquote><p><strong>题意:</strong>  给出长度为n的数组(maxn=1e6),要求不含相同元素的最长连续区间长度</p><p><strong>思路:</strong> </p><ol><li><p>双指针(l,r)移动表示[l,r]内没有重复的元素,用个set记录当前区间已经出现了的数,如果枚举到一个没有出现的数,则加入set,++r,否则一直删除左端已经出现过的元素直到重复元素被删除</p></li><li><p>上面可以稍微优化一下,因为 Ai 最大1e9,我们先将原数组离散化,再用一个vis[] 记录Ai 是否出现过</p></li></ol><p><strong>代码1:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>,l=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">    <span class="keyword">while</span>(r&lt;=n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.find(a[r])==s.end())&#123;</span><br><span class="line">            s.insert(a[r]);</span><br><span class="line">            ans=max(ans,r-l+<span class="number">1</span>);</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            s.erase(a[l]);</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码2:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],pre[maxn],vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> m=unique(b+<span class="number">1</span>,b+<span class="number">1</span>+n)-b<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        a[i]=lower_bound(b+<span class="number">1</span>,b+<span class="number">1</span>+n,a[i])-b<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>,l=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[a[i]])&#123;</span><br><span class="line">            vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(a[l]!=a[i])&#123;</span><br><span class="line">                vis[a[l]]=<span class="number">0</span>;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            l++;</span><br><span class="line">            vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=max(ans,i-l+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><p>一场比较简单的比赛,一点小粗心kmp就挂了</p><p>第一次在高铁上写博客,刺激~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/372#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/372#question&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A 救救猫咪&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 暴力&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;B 救救兔子&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;给出n长数组，m个询问，每次询问给出一个x，要求数组中与x差距最小的数(如果差距相等，输出较小的那个)&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="二分" scheme="quincy.ink/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="字符串hash" scheme="quincy.ink/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2hash/"/>
    
      <category term="暴力" scheme="quincy.ink/tags/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="kmp" scheme="quincy.ink/tags/kmp/"/>
    
      <category term="STL" scheme="quincy.ink/tags/STL/"/>
    
      <category term="离散化" scheme="quincy.ink/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>EOJ Monthly 2019.2</title>
    <link href="quincy.ink/EOJ-Monthly-2019-2.html"/>
    <id>quincy.ink/EOJ-Monthly-2019-2.html</id>
    <published>2019-02-23T06:03:29.000Z</published>
    <updated>2019-03-02T01:43:05.072Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://acm.ecnu.edu.cn/contest/140/" target="_blank" rel="noopener">https://acm.ecnu.edu.cn/contest/140/</a></p><p>A,B,C,E To be continue…</p><p><br></p><blockquote><p><strong>D 进制转换</strong></p></blockquote><p><strong>题意：</strong>求[l,r]中所有数的k进制末尾恰好有m个零的数有多少个<a id="more"></a></p><p><strong>思路：</strong></p><p>x在k进制下末尾恰好有m个零说明x%(k^m)恒等于0，而x%(k^(m+1))不恒等于0，而x%(k^m)==0的情况包含了x%(k^(m+1))==0的情况，所以由容斥定理有[1,x]中满足题意的数有 x/(k^m) - x/(k^(m+1)) 个</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(ll k,ll m,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        x/=k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll l,r,k,m;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&amp;l,&amp;r,&amp;k,&amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,calc(k,m,r)-calc(k,m+<span class="number">1</span>,r)-calc(k,m,l<span class="number">-1</span>)+calc(k,m+<span class="number">1</span>,l<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>F 方差</strong></p></blockquote><p><strong>题意：</strong> 在n个数中选m个数，使得这m个数的方差*(m^2)最小<!--more--></p><p><strong>思路：</strong></p><p>首先想到要使方差越小，则要这m个数与平均数的差距越小，所以我们可以先排序再尺取m长;</p><p>不难发现将方差公式乘以m^2后可以化简得到 </p><script type="math/tex; mode=display">m(a_1^2+a_2^2+⋯+a_m^2) − (a_1+a_2+⋯+a_m)^2</script><p>（MathJax真好用，小声哔哔</p><p>然后维护一个前缀和与一个前缀平方和即可</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">ll sum1[maxn],sum2[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        sum1[i]=sum1[i<span class="number">-1</span>]+a[i];</span><br><span class="line">        sum2[i]=sum2[i<span class="number">-1</span>]+a[i]*a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&lt;=n;i++)&#123;</span><br><span class="line">        ll tmp=m*(sum2[i]-sum2[i-m])-(sum1[i]-sum1[i-m])*(sum1[i]-sum1[i-m]);</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">-1</span>||ans&gt;tmp) ans=tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://acm.ecnu.edu.cn/contest/140/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://acm.ecnu.edu.cn/contest/140/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A,B,C,E To be continue…&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;D 进制转换&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;求[l,r]中所有数的k进制末尾恰好有m个零的数有多少个&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="数学" scheme="quincy.ink/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>牛客OI周赛7-提高组</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2OI%E5%91%A8%E8%B5%9B7-%E6%8F%90%E9%AB%98%E7%BB%84.html"/>
    <id>quincy.ink/牛客OI周赛7-提高组.html</id>
    <published>2019-02-23T01:49:50.000Z</published>
    <updated>2019-03-03T11:25:52.633Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/371#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/371#question</a></p><blockquote><p><strong>A  小睿睿的等式</strong></p></blockquote><p><strong>题意：</strong>有n根火柴棒，能摆成形如“A+B=n”的等式且使用的火柴棒数也恰好等于n/k的等式有多少种(B+A=n与A+B=n看作一种,“=”与“+”分别需要使用2根火柴棒,maxn=5e7)  <a id="more"></a></p><p><img src="https://uploadfiles.nowcoder.com/images/20190220/309900_1550640194686_6C69625EB40698CDC89FA30046FEB74A" alt="img"></p><p><strong>思路：</strong>直接暴力拆分每组A+B写的挫会超时，比赛时没注意给出的空间很大(512MB)，先将所有5e7以内数所需火柴数打表即可</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">5e7</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    num[<span class="number">0</span>]=<span class="number">6</span>;</span><br><span class="line">    num[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">    num[<span class="number">2</span>]=<span class="number">5</span>;</span><br><span class="line">    num[<span class="number">3</span>]=<span class="number">5</span>;</span><br><span class="line">    num[<span class="number">4</span>]=<span class="number">4</span>;</span><br><span class="line">    num[<span class="number">5</span>]=<span class="number">5</span>;</span><br><span class="line">    num[<span class="number">6</span>]=<span class="number">6</span>;</span><br><span class="line">    num[<span class="number">7</span>]=<span class="number">3</span>;</span><br><span class="line">    num[<span class="number">8</span>]=<span class="number">7</span>;</span><br><span class="line">    num[<span class="number">9</span>]=<span class="number">6</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        num[i]=num[i/<span class="number">10</span>]+num[i%<span class="number">10</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> kk=n/k;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,x,y,z=num[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>; a&lt;=n/<span class="number">2</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">int</span> b=n-a;</span><br><span class="line">        x=num[a];</span><br><span class="line">        y=num[b];</span><br><span class="line">        <span class="keyword">if</span>(x+y+z+<span class="number">4</span>==kk)</span><br><span class="line">            ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>B  小睿睿的询问</strong></p></blockquote><p><strong>题意：</strong>给出随机生成一个n长数组的函数和生成区间查询L，R的函数，要求所有L，R区间生成数组中val[i]最大且较小下标异或值（maxn=1e5，maxm=5e7)</p><p><strong>思路：</strong>最开始写的线段树（O(mlogn)），因为是随机数据没想到过了时间是全场最久的(4632/5000 ms),后来知道可以用ST表写，但自己写的挫，加了个二分查对应下标也用了2900+ms(O(nlognlogn))，再后来可以在ST表处直接用个pair，val[i]和i对应,每次查询O(1)，总体复杂度O(nlogn+m)</p><p><strong>代码：</strong></p><p>线段树版：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> val[maxn],Max[maxn&lt;&lt;<span class="number">2</span>],idx[maxn&lt;&lt;<span class="number">2</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">    Max[o]=max(Max[o&lt;&lt;<span class="number">1</span>],Max[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span>(Max[o&lt;&lt;<span class="number">1</span>] &gt;= Max[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]) idx[o]=idx[o&lt;&lt;<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">else</span>                         idx[o]=idx[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        Max[o]=val[l];</span><br><span class="line">        idx[o]=l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(lson);</span><br><span class="line">    build(rson);</span><br><span class="line">    push_up(l,r,o);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">        <span class="keyword">return</span> idx[o];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid&amp;&amp;R&gt;mid)&#123;</span><br><span class="line">        <span class="keyword">int</span> i=query(L,R,lson);</span><br><span class="line">        <span class="keyword">int</span> j=query(L,R,rson);</span><br><span class="line">        <span class="keyword">if</span>(val[i]&gt;=val[j]) <span class="keyword">return</span> i;</span><br><span class="line">        <span class="keyword">else</span>               <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(L&lt;=mid)&#123;</span><br><span class="line">        <span class="keyword">return</span> query(L,R,lson);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(R&gt;mid)&#123;</span><br><span class="line">        <span class="keyword">return</span> query(L,R,rson);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x = seed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        val[i]=x%<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> lastans=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_ask</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> seedx,<span class="keyword">int</span> seedy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x=seedx,y=seedy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        y ^= y &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> L=(x^lastans)%n+<span class="number">1</span>,R=(y^lastans)%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (L&gt;R) swap(L,R);</span><br><span class="line">        lastans=query(L,R,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        ans^=lastans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> seed,seedx,seedy;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;seed,&amp;seedx,&amp;seedy);</span><br><span class="line">    <span class="comment">//double ss=clock();</span></span><br><span class="line">    generate_array(n,seed);</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    generate_ask(n,m,seedx,seedy);</span><br><span class="line">    <span class="comment">//printf("%.0fms\n",clock()-ss);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二分+ST版：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> val[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;idx[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST_pre</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i][<span class="number">0</span>]=val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;t;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            f[i][j]=max(f[i][j<span class="number">-1</span>],f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ST_query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> max(f[l][k],f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x = seed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        val[i]=x%<span class="number">100</span>;</span><br><span class="line">        idx[val[i]].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> lastans=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_ask</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> seedx,<span class="keyword">int</span> seedy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x=seedx,y=seedy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        y ^= y &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> L=(x^lastans)%n+<span class="number">1</span>,R=(y^lastans)%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (L&gt;R) swap(L,R);</span><br><span class="line">        <span class="keyword">int</span> pos,Max=ST_query(L,R);</span><br><span class="line">        <span class="keyword">int</span> s=lower_bound(idx[Max].begin(),idx[Max].end(),L)-idx[Max].begin();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=s;k&lt;=idx[Max].size();k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(idx[Max][k]&gt;=L&amp;&amp;idx[Max][k]&lt;=R)&#123;</span><br><span class="line">                pos=idx[Max][k];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        lastans=pos;</span><br><span class="line">        ans^=lastans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> seed,seedx,seedy;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;seed,&amp;seedx,&amp;seedy);</span><br><span class="line">    <span class="comment">//double ss=clock();</span></span><br><span class="line">    generate_array(n,seed);</span><br><span class="line">    ST_pre();</span><br><span class="line">    generate_ask(n,m,seedx,seedy);</span><br><span class="line">    <span class="comment">//printf("%.0fms\n",clock()-ss);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化ST版：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> val[maxn];</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; f[maxn][<span class="number">20</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST_pre</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i][<span class="number">0</span>].first=i;</span><br><span class="line">        f[i][<span class="number">0</span>].second=val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;t;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//f[i][j]=max(f[i][j-1],f[i+(1&lt;&lt;j-1)][j-1]);</span></span><br><span class="line">            f[i][j] = f[i][j<span class="number">-1</span>].second &gt;= f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>].second ? f[i][j<span class="number">-1</span>]:f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ST_query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> f[l][k].second &gt;= f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k].second ? f[l][k].first : f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k].first;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x = seed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        val[i]=x%<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> lastans=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_ask</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> seedx,<span class="keyword">int</span> seedy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x=seedx,y=seedy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        y ^= y &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> L=(x^lastans)%n+<span class="number">1</span>,R=(y^lastans)%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (L&gt;R) swap(L,R);</span><br><span class="line">        <span class="keyword">int</span> pos=ST_query(L,R);</span><br><span class="line">        lastans=pos;</span><br><span class="line">        ans^=lastans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> seed,seedx,seedy;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;seed,&amp;seedx,&amp;seedy);</span><br><span class="line">    <span class="comment">//double ss=clock();</span></span><br><span class="line">    generate_array(n,seed);</span><br><span class="line">    ST_pre();</span><br><span class="line">    generate_ask(n,m,seedx,seedy);</span><br><span class="line">    <span class="comment">//printf("%.0fms\n",clock()-ss);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>C 小睿睿的方案</strong></p></blockquote><p>To be continue…</p><p><br></p><p>这场Rating赛打得还是还算比较开心吧，学了一下ST表空间复杂度O(nlogn),区间查询O(1)很不错的算法，程序运算时间的计算和数组所占大概空间的计算，虽然理论课学了但一直没去实践QWQ另外牛客题目还不错~不说了EOJ的题还没补呢！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/371#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/371#question&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A  小睿睿的等式&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;有n根火柴棒，能摆成形如“A+B=n”的等式且使用的火柴棒数也恰好等于n/k的等式有多少种(B+A=n与A+B=n看作一种,“=”与“+”分别需要使用2根火柴棒,maxn=5e7)&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="OI" scheme="quincy.ink/tags/OI/"/>
    
      <category term="ST" scheme="quincy.ink/tags/ST/"/>
    
      <category term="线段树" scheme="quincy.ink/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="打表" scheme="quincy.ink/tags/%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛 40A--小D的剧场</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B-40A--%E5%B0%8FD%E7%9A%84%E5%89%A7%E5%9C%BA.html"/>
    <id>quincy.ink/牛客练习赛-40A--小D的剧场.html</id>
    <published>2019-02-16T11:26:46.000Z</published>
    <updated>2019-03-02T01:42:53.831Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>给出自然数1-49的49个数要求拼接成长度为n的序列，且要求任意相邻的三个不能为给出q个条件中任意一个条件的全排列，求所有合法序列数对 1e9+7 取模。</p><p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/369/A" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/369/A</a></p><p>Input:<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10 10 //n q</span><br><span class="line">18 3 3</span><br><span class="line">43 28 22</span><br><span class="line">42 28 3</span><br><span class="line">48 48 4</span><br><span class="line">29 9 31</span><br><span class="line">47 9 22</span><br><span class="line">1 22 49</span><br><span class="line">15 48 29</span><br><span class="line">2 8 27</span><br><span class="line">4 24 34</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">382785822</span><br></pre></td></tr></table></figure><p><strong>思路：</strong></p><p>设dp[i] [j] [k]为放到第i位时，a[i-1]=j, a[i]==k的状态，提前将不合法字段标记，转移方程：</p><script type="math/tex; mode=display">dp_{i,k,l} = \sum_{i=1}^{49} (!ban_{j,k,l})*dp_{i-1,j,k}</script><p>表示j,k,l可行时，可在 a[i-2]==j,a[i-1]==k的状态转移到 a[i-1]==k,a[i]==l的状态。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">505</span>][<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"><span class="keyword">bool</span> ban[<span class="number">50</span>][<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        ban[a][b][c]=ban[a][c][b]=<span class="literal">true</span>;</span><br><span class="line">        ban[b][a][c]=ban[b][c][a]=<span class="literal">true</span>;</span><br><span class="line">        ban[c][a][b]=ban[c][b][a]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">49</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">49</span>;j++)&#123;</span><br><span class="line">            dp[<span class="number">2</span>][i][j]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">49</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">49</span>;k++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=<span class="number">49</span>;l++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!ban[j][k][l])&#123;</span><br><span class="line">                        dp[i][k][l]=(dp[i][k][l]+dp[i<span class="number">-1</span>][j][k])%P;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">49</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">49</span>;j++)&#123;</span><br><span class="line">            ans=(ans+dp[n][i][j])%P;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给出自然数1-49的49个数要求拼接成长度为n的序列，且要求任意相邻的三个不能为给出q个条件中任意一个条件的全排列，求所有合法序列数对 1e9+7 取模。&lt;/p&gt;
&lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/369/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/369/A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Input:&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dp" scheme="quincy.ink/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛 40C--小A与欧拉路</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B-40C--%E5%B0%8FA%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B7%AF.html"/>
    <id>quincy.ink/牛客练习赛-40C--小A与欧拉路.html</id>
    <published>2019-02-16T08:08:43.000Z</published>
    <updated>2019-02-16T12:00:40.487Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>小A给你了一棵树，对于这棵树上的每一条边，你都可以将它复制任意（可以为0）次（即在这条边连接的两个点之间再加一条边权相同的边），求所有可能新形成的图中欧拉路的最短长度 </p><p>欧拉路：从图中任意一个点开始到图中任意一个点结束的路径，并且图中每条边只通过恰好一次。</p><p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/369/C" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/369/C</a></p><p>Input：<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4 //n 树的点数</span><br><span class="line">1 2 1//u v w</span><br><span class="line">1 3 1</span><br><span class="line">1 4 2</span><br></pre></td></tr></table></figure><p>Output：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>思路：</strong></p><p>先考虑回路的情况。由于是一棵树，任两点间路径只有一条，从一条边走到深度更大的点，一定还会从同一条边返回以回到起点或者遍历其他子树，所以每条边需要复制一次，此时答案是边权和的两倍。</p><p>不是回路的情况可以减掉从终点回到起点的路径，要让这条路径尽量长，所以长度一定是直径的长度。</p><p>答案就是边权和的两倍减去直径长度。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EDGE</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,w,to;</span><br><span class="line">&#125;edge[maxn*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    edge[++cnt].next=head[u];</span><br><span class="line">    edge[cnt].to=v;</span><br><span class="line">    edge[cnt].w=w;</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> pos,ans;</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pre)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> to=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(to==pre) <span class="keyword">continue</span>;</span><br><span class="line">        d[to]=d[x]+edge[i].w;</span><br><span class="line">        dfs(to,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d[x]&gt;ans)&#123;</span><br><span class="line">        ans=d[x];</span><br><span class="line">        pos=x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u,v,w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">        add(u,v,w);</span><br><span class="line">        add(v,u,w);</span><br><span class="line">        sum+=<span class="number">2</span>*w;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    dfs(pos,<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum-ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小A给你了一棵树，对于这棵树上的每一条边，你都可以将它复制任意（可以为0）次（即在这条边连接的两个点之间再加一条边权相同的边），求所有可能新形成的图中欧拉路的最短长度 &lt;/p&gt;
&lt;p&gt;欧拉路：从图中任意一个点开始到图中任意一个点结束的路径，并且图中每条边只通过恰好一次。&lt;/p&gt;
&lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/369/C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/369/C&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Input：&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dfs" scheme="quincy.ink/tags/dfs/"/>
    
      <category term="欧拉路" scheme="quincy.ink/tags/%E6%AC%A7%E6%8B%89%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSU 1803--2016</title>
    <link href="quincy.ink/CSU%201803--2016.html"/>
    <id>quincy.ink/CSU 1803--2016.html</id>
    <published>2019-02-14T06:11:52.000Z</published>
    <updated>2019-03-03T03:19:53.525Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>求[l,r]之间有多少种a*b=2016的组合。</p><p><strong>思路：</strong><a id="more"></a></p><p>首先2016的1倍情况下有1*2016 , 2*1008 , 3*637… 等情况，2倍情况就是把a或b扩大2倍就行，那么我们可以把a看做[1,2016]的数，a’ 看做[2017,4032]的数，这样每次跨2016个数就知道有多少倍数了。最后两层for循环找出i*j==2016的时候把对应的倍数种类乘起来加到答案就行了。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    ll a[<span class="number">3000</span>],b[<span class="number">3000</span>];            <span class="comment">//a[i]储存n有多少个i*2016&lt;=n，b[i]....m</span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        ll k=n/<span class="number">2016</span>;                <span class="comment">//有k个2016跨度</span></span><br><span class="line">        ll mm=n%<span class="number">2016</span>;               <span class="comment">//余下的等下都要+1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mm;i++)      a[i]=k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=mm+<span class="number">1</span>;i&lt;=<span class="number">2016</span>;i++)  a[i]=k;</span><br><span class="line"> </span><br><span class="line">        k=m/<span class="number">2016</span>;</span><br><span class="line">        mm=m%<span class="number">2016</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mm;i++)    b[i]=k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=mm+<span class="number">1</span>;i&lt;=<span class="number">2016</span>;i++)  b[i]=k;</span><br><span class="line"> </span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2016</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">2016</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((i*j)%<span class="number">2016</span>==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans+=(a[i]*b[j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;求[l,r]之间有多少种a*b=2016的组合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="数学" scheme="quincy.ink/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>ZOJ 4011--Happy-Sequence</title>
    <link href="quincy.ink/ZOJ%204011--Happy-Sequence.html"/>
    <id>quincy.ink/ZOJ 4011--Happy-Sequence.html</id>
    <published>2019-02-14T06:06:40.000Z</published>
    <updated>2019-02-16T08:19:11.447Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>给一个n和m，求所有组成m长且值在1-n内且满足 a[i]%a[i-1]==0 的序列方案数。</p><p><strong>思路：</strong><a id="more"></a></p><p>dp[i] [j] 表示长度为 i 的序列的最后一位为 j ,转移方程：dp[i] [j]=0 , dp[i] [j]+=dp[i-1] [ j的因子 ] 。因子可以通过埃氏筛打表得到，dp[m] [i]累加和即为答案，预处理2000*2000以内所有答案即可。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;y[N];         <span class="comment">//储存因子</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;=N; j+=i)</span><br><span class="line">        &#123;</span><br><span class="line">            y[j].push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=N; i++) dp[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=N; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;y[j].size(); k++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j]=(dp[i][j]+dp[i<span class="number">-1</span>][y[j][k]])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) ans=(ans+dp[m][i])%mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给一个n和m，求所有组成m长且值在1-n内且满足 a[i]%a[i-1]==0 的序列方案数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dp" scheme="quincy.ink/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>ZOJ 2594--Driving-Straight</title>
    <link href="quincy.ink/ZOJ%202594--Driving-Straight.html"/>
    <id>quincy.ink/ZOJ 2594--Driving-Straight.html</id>
    <published>2019-02-14T06:02:16.000Z</published>
    <updated>2019-02-16T08:19:30.121Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>给出一个（2<em>m-1）</em>（2*n-1）的图，要求输出从左下角走到右上角最短距离走法的路径，只能在 ‘-’ 或 ‘|’ 上移动，答案保证有解，有多解输出任一，n,m&lt;=400。</p><p><strong>思路：</strong><a id="more"></a></p><p>因为题目要求输出路径，而bfs中如果每个状态都记录到当前状态的路径，可能会TLE或者MLE。</p><p>所以考虑先从终点开始bfs出每个点到终点的最短距离，然后再从起点出发bfs一直找 当前点的最短距离-1==下一步的最短距离 的位置就可以回到终点，注意方向的变换。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">10</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;   <span class="comment">//反向由北到西顺时针 依次为0123</span></span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dd[<span class="number">10</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,   <span class="comment">// F</span></span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>&#125;,   <span class="comment">// L</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>&#125;    <span class="comment">// R</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> dir[<span class="number">10</span>]=&#123;<span class="string">'F'</span>,<span class="string">'L'</span>,<span class="string">'R'</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    node()&#123;&#125;</span><br><span class="line">    node(<span class="keyword">int</span> x,<span class="keyword">int</span> y):x(x),y(y)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;node&gt;q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    dis[<span class="number">1</span>][<span class="number">2</span>*n<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">    q.push(node(<span class="number">1</span>,<span class="number">2</span>*n<span class="number">-1</span>));</span><br><span class="line">    node now;</span><br><span class="line">    <span class="keyword">int</span> x,y,px,py;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        now=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        px=now.x,py=now.y;</span><br><span class="line">        <span class="comment">//printf("%d %d\n",px,py);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            x=px+dx[i];</span><br><span class="line">            y=py+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(mp[x][y]==<span class="string">'-'</span> || mp[x][y]==<span class="string">'|'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=dx[i];</span><br><span class="line">                y+=dy[i];</span><br><span class="line">                <span class="keyword">if</span>(dis[x][y]==<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[x][y]=dis[px][py]+<span class="number">1</span>;</span><br><span class="line">                    q.push(node(x,y));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> statu,x,y,px,py;</span><br><span class="line">    <span class="keyword">if</span>(mp[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">2</span>]==<span class="string">'-'</span> &amp;&amp; dis[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">1</span>]<span class="number">-1</span>==dis[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">3</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"E"</span>);</span><br><span class="line">        px=<span class="number">2</span>*m<span class="number">-1</span>,py=<span class="number">3</span>;</span><br><span class="line">        statu=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mp[<span class="number">2</span>*m<span class="number">-2</span>][<span class="number">1</span>]==<span class="string">'|'</span> &amp;&amp; dis[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">1</span>]<span class="number">-1</span>==dis[<span class="number">2</span>*m<span class="number">-3</span>][<span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"N"</span>);</span><br><span class="line">        px=<span class="number">2</span>*m<span class="number">-3</span>,py=<span class="number">1</span>;</span><br><span class="line">        statu=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(dis[px][py]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            x=px+dx[dd[i][statu]];</span><br><span class="line">            y=py+dy[dd[i][statu]];</span><br><span class="line">            <span class="keyword">if</span>(mp[x][y]==<span class="string">'-'</span> || mp[x][y]==<span class="string">'|'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=dx[dd[i][statu]];</span><br><span class="line">                y+=dy[dd[i][statu]];</span><br><span class="line">                <span class="keyword">if</span>(dis[x][y]==dis[px][py]<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%c"</span>,dir[i]);</span><br><span class="line">                    statu=dd[i][statu];</span><br><span class="line">                    px=x,py=y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">        <span class="built_in">memset</span>(mp,<span class="string">' '</span>,<span class="keyword">sizeof</span>(mp));</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">2</span>*m<span class="number">-1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            gets(mp[i]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        bfs();</span><br><span class="line">        <span class="comment">/*for(int i=1;i&lt;=2*m-1;i+=2)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            for(int j=1;j&lt;=2*n-1;j+=2)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                printf("%3d",dis[i][j]);</span></span><br><span class="line"><span class="comment">            &#125;puts("");</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        print();</span><br><span class="line">        <span class="keyword">if</span>(T) <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">4 4</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">      |</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">N</span></span><br><span class="line"><span class="comment">RFFLLFFRRFF</span></span><br><span class="line"><span class="comment">4 4</span></span><br><span class="line"><span class="comment">+-+ +-+</span></span><br><span class="line"><span class="comment">| |   |</span></span><br><span class="line"><span class="comment">+ +-+-+</span></span><br><span class="line"><span class="comment">|   | |</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">|     |</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">E</span></span><br><span class="line"><span class="comment">FFLFF</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给出一个（2&lt;em&gt;m-1）&lt;/em&gt;（2*n-1）的图，要求输出从左下角走到右上角最短距离走法的路径，只能在 ‘-’ 或 ‘|’ 上移动，答案保证有解，有多解输出任一，n,m&amp;lt;=400。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="bfs" scheme="quincy.ink/tags/bfs/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces 110D--Lucky Probability</title>
    <link href="quincy.ink/Codeforces%20110D--Lucky%20Probability.html"/>
    <id>quincy.ink/Codeforces 110D--Lucky Probability.html</id>
    <published>2019-02-14T05:51:31.000Z</published>
    <updated>2019-02-16T08:20:09.847Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong> </p><p>出个两个（P,V）范围在1e9的正整数区间，分别从其中随机选出一个数，选出的两个数作为一个新区间的左右端点。要求新区间内的幸运数刚好为k个的概率（幸运数指一个数的数位只有4或7）。</p><p><strong>思路：</strong> <a id="more"></a><br>首先可以dfs找出所有在数据范围内的幸运数，记为L数组，因为数目不多，便可成k段遍历 L数组，每次分别计算【 L[i-1]+1，L[i]】与【Pl，Pr】的线段交集，和【 L[i+k-1]，L[i+k]-1】与【Vl，Vr】的线段交集，将两个结果相乘即是符合[i,i+k-1]区间幸运数的可能情况，同样的还要对P,V两个区间交换后在计算一遍，概率=所有可能情况/(Pr-Pl+1)/(Vr-Vl+1);然后还要注意k==1的情况会重复计算，需特判。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll L[<span class="number">1050</span>];</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> len,<span class="keyword">int</span> p,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p==len)</span><br><span class="line">    &#123;</span><br><span class="line">        L[++num]=v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(len,p+<span class="number">1</span>,v*<span class="number">10</span>+<span class="number">4</span>);</span><br><span class="line">    dfs(len,p+<span class="number">1</span>,v*<span class="number">10</span>+<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">contain</span><span class="params">(ll x1,ll y1,ll x2,ll y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll l=max(x1,x2);</span><br><span class="line">    ll r=min(y1,y2);</span><br><span class="line">    <span class="keyword">return</span> r-l+<span class="number">1</span>&gt;<span class="number">0</span>?r-l+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=<span class="number">9</span>;len++) dfs(len,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    L[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    L[++num]=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="comment">//for(int i=1;i&lt;=num;i++) printf("%d  %lld\n",i,L[i]);</span></span><br><span class="line">    ll Pl,Pr,Vl,Vr;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%d"</span>,&amp;Pl,&amp;Pr,&amp;Vl,&amp;Vr,&amp;k);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1022</span>-k+<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j=i+k<span class="number">-1</span>;</span><br><span class="line">        sum+=contain(L[i<span class="number">-1</span>]+<span class="number">1</span>,L[i],Pl,Pr)*contain(L[j],L[j+<span class="number">1</span>]<span class="number">-1</span>,Vl,Vr);</span><br><span class="line">        <span class="keyword">if</span>(L[i]&gt;Pr) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1022</span>-k+<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j=i+k<span class="number">-1</span>;</span><br><span class="line">        sum+=contain(L[i<span class="number">-1</span>]+<span class="number">1</span>,L[i],Vl,Vr)*contain(L[j],L[j+<span class="number">1</span>]<span class="number">-1</span>,Pl,Pr);</span><br><span class="line">        <span class="keyword">if</span>(L[i]&gt;Vr) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1022</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(contain(L[i],L[i],Pl,Pr)&amp;&amp;contain(L[i],L[i],Vl,Vr)) sum--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,sum*<span class="number">1.0</span>/(Vr-Vl+<span class="number">1</span>)/(Pr-Pl+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;出个两个（P,V）范围在1e9的正整数区间，分别从其中随机选出一个数，选出的两个数作为一个新区间的左右端点。要求新区间内的幸运数刚好为k个的概率（幸运数指一个数的数位只有4或7）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dfs" scheme="quincy.ink/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>POJ 2774--Long Long Message</title>
    <link href="quincy.ink/POJ%202774--Long%20Long%20Message.html"/>
    <id>quincy.ink/POJ 2774--Long Long Message.html</id>
    <published>2019-02-13T11:51:55.000Z</published>
    <updated>2019-02-16T08:19:43.247Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong><br>给出两个最长长为1e5的字符串，求他们的最长公共子串长度。</p><p><strong>思路：</strong><a id="more"></a></p><p>分别将两个字符串预处理出hash值，二分【1-min（lens，lent）】的长度，check函数中每次将长度为mid的hash值记录并检查是否符合条件，是则下边界右移，否则上边界左移。复杂度O(nlogn)</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N =<span class="number">100000</span>+<span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> s[N],t[N];</span><br><span class="line"><span class="keyword">int</span> lens,lent;</span><br><span class="line">ull base=<span class="number">233</span>;</span><br><span class="line">ull p[N],hs[N],ht[N];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ull <span class="title">getht</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ht[r]-p[r-l+<span class="number">1</span>]*ht[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ull&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lens-len+<span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ull tmp=geths(i,i+len<span class="number">-1</span>);</span><br><span class="line">        mp.push_back(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(mp.begin(),mp.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lent-len+<span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ull tmp=getht(i,i+len<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span>(binary_search(mp.begin(),mp.end(),tmp)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;N; i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s+<span class="number">1</span>,t+<span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        lens=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        lent=<span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lens; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            hs[i]=hs[i<span class="number">-1</span>]*base+s[i]-<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lent; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ht[i]=ht[i<span class="number">-1</span>]*base+t[i]-<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">1</span>,r=min(lens,lent),mid;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">        &#123;</span><br><span class="line">            mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid)) l=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span>        r=mid<span class="number">-1</span>;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;br&gt;给出两个最长长为1e5的字符串，求他们的最长公共子串长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="二分" scheme="quincy.ink/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="字符串hash" scheme="quincy.ink/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2hash/"/>
    
  </entry>
  
</feed>
