<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Quincy&#39;s Blog</title>
  
  <subtitle>芳林新叶催陈叶，流水前波让后波</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="quincy.ink/"/>
  <updated>2019-06-09T08:31:21.065Z</updated>
  <id>quincy.ink/</id>
  
  <author>
    <name>Quincy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>湘潭大学2019程序设计实践</title>
    <link href="quincy.ink/%E6%B9%98%E6%BD%AD%E5%A4%A7%E5%AD%A62019%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5.html"/>
    <id>quincy.ink/湘潭大学2019程序设计实践.html</id>
    <published>2019-06-03T04:45:18.000Z</published>
    <updated>2019-06-09T08:31:21.065Z</updated>
    
    <content type="html"><![CDATA[<center><font face="黑体" color="red" size="4px">抄袭一时爽，查重火葬场</font></center><center>因考前会查重，故仅提供思路参考，代码后续补上，有更好解法欢迎交流</center><h5 id="1262-Fish"><a href="#1262-Fish" class="headerlink" title="1262 Fish"></a>1262 Fish</h5><p>贪心，优先队列维护每个池塘能钓到鱼的数量即可，当前池塘有最多鱼的池塘优先出队列<a id="more"></a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1271-Color"><a href="#1271-Color" class="headerlink" title="1271 Color"></a>1271 Color</h5><p>结论：n*m-(x的种类数)*(y的种类数)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1163-ASCLL"><a href="#1163-ASCLL" class="headerlink" title="1163 ASCLL"></a>1163 ASCLL</h5><p>直接模拟，输出%05X和%02X即带前导0的十六进制，回车的ASCLL码也要输出，注意输出空格和回车的地方</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1243-Bob’s-Password"><a href="#1243-Bob’s-Password" class="headerlink" title="1243 Bob’s Password"></a>1243 Bob’s Password</h5><p>枚举九个数字会非法的情况即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1246-Matrix-Transposition"><a href="#1246-Matrix-Transposition" class="headerlink" title="1246 Matrix Transposition"></a>1246 Matrix Transposition</h5><p>看半天题意，n,m没用，将输入的x看做y，输入的y看做x，反过来按y优先排序即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1248-Alice-and-Bob"><a href="#1248-Alice-and-Bob" class="headerlink" title="1248 Alice and Bob"></a>1248 Alice and Bob</h5><p>直接模拟，将1作为数字7处理会很好写很多，注意求和依然是+1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1251-Colombian-Number"><a href="#1251-Colombian-Number" class="headerlink" title="1251 Colombian Number"></a>1251 Colombian Number</h5><p>简单数学，注意到[1,1000000000]区间内数位和在[1,81]内，所以只需在区间[n-81,n]内枚举k看是否能使k+sum(k)==n成立即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1253-Robot"><a href="#1253-Robot" class="headerlink" title="1253 Robot"></a>1253 Robot</h5><p>贪心，如果在中途转弯肯定不如每次从头走到尾，可以证明最多转n-1次，时间复杂度O($n^2$)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1252-Matrix-Word"><a href="#1252-Matrix-Word" class="headerlink" title="1252 Matrix Word"></a>1252 Matrix Word</h5><p>统计每个字符在每一行每一列的出现次数，最后判断是否都为1即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1621-Duplicate-Elements"><a href="#1621-Duplicate-Elements" class="headerlink" title="1621 Duplicate Elements"></a>1621 Duplicate Elements</h5><p>unordered_map或map或set记录每个值是否出现即可,当然也可以用其他的哈希方法，超时的可以试试之前的方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1263-矩形面积的并"><a href="#1263-矩形面积的并" class="headerlink" title="1263 矩形面积的并"></a>1263 矩形面积的并</h5><p>哪一年的蓝桥杯原题来着，求出相交矩形的边界,判掉不会相交的情况，在不知道位置相对位置的情况下计算面积注意取绝对值，面积并=两矩形面积和-两矩形面积交</p><p>l=max(min(x1,x2),min(x3,x4));<br>r=min(max(x1,x2),max(x3,x4));<br>d=max(min(y1,y2),min(y3,y4));<br>u=min(max(y1,y2),max(y3,y4));</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1268-鞍点"><a href="#1268-鞍点" class="headerlink" title="1268 鞍点"></a>1268 鞍点</h5><p>输入的时候就记录每行每列的最值即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1272-Robot"><a href="#1272-Robot" class="headerlink" title="1272 Robot"></a>1272 Robot</h5><p>统计L,R,U,D的个数，只有当其中三个有且三个的其中一个变为剩下两个中另一个使得剩下两个相等时才可行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1277-Tri-Triangle"><a href="#1277-Tri-Triangle" class="headerlink" title="1277 Tri-Triangle"></a>1277 Tri-Triangle</h5><p>找规律然后直接输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1280-String-Hash"><a href="#1280-String-Hash" class="headerlink" title="1280 String Hash"></a>1280 String Hash</h5><p>就是26进制转10进制</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1281-Cute-String"><a href="#1281-Cute-String" class="headerlink" title="1281 Cute String"></a>1281 Cute String</h5><p>输入用gets或者循环getchar()，跳过字符串首部空格后，统计中间空格个数便可知道单词个数，看空格个数是否&gt;9和字母种类个数&gt;10即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1284-多项式"><a href="#1284-多项式" class="headerlink" title="1284 多项式"></a>1284 多项式</h5><p>直接求和，求和过程中取模</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1286-比赛"><a href="#1286-比赛" class="headerlink" title="1286 比赛"></a>1286 比赛</h5><p>当时找的规律+猜结论？</p><p>好像是dp[i]表示冠军最多打i场需要的最多选手人数，那么容易退推出前几项dp[0]=1,dp[1]=2,dp[2]=4…</p><p>dp[i]=dp[i-1]+dp[i-2]+1，如果n&lt;=dp[i]，那么答案就是i</p><p>64位整数__int64要%I64d输入输出啊，%lld就gg了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1291-Buying-Gifts"><a href="#1291-Buying-Gifts" class="headerlink" title="1291 Buying Gifts"></a>1291 Buying Gifts</h5><p>要想最大值和最小值相差最小，那么连续的m长连续段礼物价格序列是最有可能的</p><p>将价格升序排序后以长度m尺取找出最小价格差即可，由于排好序所以总和肯定取之前的更小</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1292-Co-string"><a href="#1292-Co-string" class="headerlink" title="1292  Co-string"></a>1292  Co-string</h5><p>hash预处理+枚举最大长度或者暴力枚举左右端点+剪枝</p><p>看statu应该有更简单的解法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1293-Diamond"><a href="#1293-Diamond" class="headerlink" title="1293 Diamond"></a>1293 Diamond</h5><p>找规律直接输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1294-Enquiry"><a href="#1294-Enquiry" class="headerlink" title="1294 Enquiry"></a>1294 Enquiry</h5><p>维护一个前缀和,sum[i]表示1…i有多少男女相邻的个数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1296-GCD"><a href="#1296-GCD" class="headerlink" title="1296 GCD"></a>1296 GCD</h5><p>容斥，与6互素就不会有和6一样的因子2,3，所以[l,r]区间的数减去2和3的倍数再加上6的倍数(计算2和3的倍数时多减了一次)即为答案</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1299-String"><a href="#1299-String" class="headerlink" title="1299 String"></a>1299 String</h5><p>按题意模拟即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1300-Dice"><a href="#1300-Dice" class="headerlink" title="1300 Dice"></a>1300 Dice</h5><p>按题意模拟即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1301-Zeroes"><a href="#1301-Zeroes" class="headerlink" title="1301 Zeroes"></a>1301 Zeroes</h5><p>按题意模拟循环1000次即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1305-斐波那契区间"><a href="#1305-斐波那契区间" class="headerlink" title="1305 斐波那契区间"></a>1305 斐波那契区间</h5><p>直接扫描一遍即可，注意防止越界，如果中途a[i]+a[i+1]!=a[i+2],那么左端点起点重新从i+1开始</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1308-比赛"><a href="#1308-比赛" class="headerlink" title="1308 比赛"></a>1308 比赛</h5><p>按题意模拟计算即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1239-2048"><a href="#1239-2048" class="headerlink" title="1239 2048"></a>1239 2048</h5><p>巨恶心的大模拟，建议直接写相关函数每次调用，方便调试</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1264-字符不重复子串"><a href="#1264-字符不重复子串" class="headerlink" title="1264 字符不重复子串"></a>1264 字符不重复子串</h5><p>如果是简单的求长度就直接用两个指针+标记数组做就好了，有点像滑动窗口</p><p>这里要用动态规划，pre[s[i]]为前一个s[i]的位置，dp[i]表示以s[i]结尾的最长不重复子串长度</p><p>那么对于s[i]有两种情况，一是s[i]在前面未出现，那么dp[i]=dp[i-1]+1；二是前面已经出现了s[i]，如果控制的区间左端点l在pre[s[i]]前面，说明当前控制的区间中有部分要跳过，dp[i]=i-pre[s[i]]，区间要缩小，否则依然是dp[i]=dp[i-1]+1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1273-Set"><a href="#1273-Set" class="headerlink" title="1273 Set"></a>1273 Set</h5><p>用set或map或其他容器等统计数字种类数，种类数&lt;=3肯定可以，&gt;4肯定不行，==4特判一下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1274-Matrix"><a href="#1274-Matrix" class="headerlink" title="1274 Matrix"></a>1274 Matrix</h5><p>很容易看出规律$ans=1+2^2+2^2+1+4^2+4^2+1+…+(2n)^2+(2n)^2+1$</p><p>由于$1^2+2^2+3^2+…+n^2=n(n+1)(2n+1)/6$</p><p>可以推出$2^2+4^2+6^2+…+(2n)^2=2n(n+1)(2n+1)/3$</p><p>因为答案要取模,又因为公式中有除法需用到数论中逆元的知识解决</p><p>当然也可以直接上Java大数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1275-Exam-Schedule"><a href="#1275-Exam-Schedule" class="headerlink" title="1275 Exam Schedule"></a>1275 Exam Schedule</h5><p>直接模拟</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1170-ICPC"><a href="#1170-ICPC" class="headerlink" title="1170 ICPC"></a>1170 ICPC</h5><p>统计每列的最高等级和所有列最高等级的出现次数即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1241-Permutation"><a href="#1241-Permutation" class="headerlink" title="1241 Permutation"></a>1241 Permutation</h5><p>首先先学习一下置换的定义和置换乘法的性质，离散数学刘任任版P190</p><p>其实就是要通过不断映射使得序列回到初始序列</p><p>如果暴力模拟，可能会卡成O(n!)的复杂度，就是全排列的情况</p><p>其实只需要计算对每一个数使a[i]变为i的次数，然后计算最小公倍数即为答案</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1249-Alice’s-Prime"><a href="#1249-Alice’s-Prime" class="headerlink" title="1249 Alice’s Prime"></a>1249 Alice’s Prime</h5><p>首先一位的素数只有2,3,5,7，然后dfs将这四个数后面不断添加1,3,5,7,9再判断素数，最后排个序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1266-RGB"><a href="#1266-RGB" class="headerlink" title="1266 RGB"></a>1266 RGB</h5><p>统计R,G,B的出现次数，在0…R-1统计G,B的出现次数，记为R1,R2，在R…R+G-1统计R,B的出现次数，记为G1,G2，在R+G…lens-1统计R,G的出现次数，记为B1,B2</p><p>那么首先肯定是两个两个区间互相交换，R1,G1交换，R2,B1交换和G2,B2交换，有可能交换不完，成为0…R-1还有’G’，R…R+G-1还有’B’，R+G…lens-1还有’R’的情况，那对于每个未交换字符的需要交换2次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1267-Matrix"><a href="#1267-Matrix" class="headerlink" title="1267 Matrix"></a>1267 Matrix</h5><p>直接模拟</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1279-Dual-Prime"><a href="#1279-Dual-Prime" class="headerlink" title="1279 Dual Prime"></a>1279 Dual Prime</h5><p>素数打表，1e6以内最多不到1e5个素数，然后枚举任意两个不同的素数，弄个前缀和维护1..i 内符合条件的个数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1283-Good-Number"><a href="#1283-Good-Number" class="headerlink" title="1283 Good Number"></a>1283 Good Number</h5><p>首先n位数第一位必须是1，满足条件只需要n-1个数中的1的个数&gt;=0的个数，那么对n-1分奇偶谈论</p><p>n-1为奇，$ans=C_{n-1}^{n/2}+C_{n-1}^{n/2+1}+…+C_{n-1}^{n-1}$</p><p>n-1为偶，$ans=C_{n-1}^{n-1/2}+C_{n-1}^{n-1/2+1}+…+C_{n-1}^{n-1}$</p><p>n==1特判下，组合数用杨辉三角打表就好了，64位整数__int64要%I64d输入输出啊，%lld就gg了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1295-Flawless-Prime"><a href="#1295-Flawless-Prime" class="headerlink" title="1295 Flawless Prime"></a>1295 Flawless Prime</h5><p>首先判断数位是否有0，存在0肯定不是，然后依次去掉最高位暴力判断是否为素数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1297-Homework"><a href="#1297-Homework" class="headerlink" title="1297 Homework"></a>1297 Homework</h5><p>发现与题目号无关，只需要通过学号和排名的关系来用map记录对应学号的积分，最后算出成绩排个序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1304-ZUMA"><a href="#1304-ZUMA" class="headerlink" title="1304 ZUMA!"></a>1304 ZUMA!</h5><p>模拟把c放到第i个和第i+1个之间后的结果，然后答案取最大值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1307-Beautiful-Number"><a href="#1307-Beautiful-Number" class="headerlink" title="1307 Beautiful Number"></a>1307 Beautiful Number</h5><p>二进制枚举0的位置和二进制串的长度，对于64位整数第63位是符号位，唯一的0前面必须有1，不然就会成为前导0，如果0…61个位置中的第i个位置为0，那么len…i+1的位置为1，i-1…0的位置也为1， 计算出所有这样的数后排序，求答案每次遍历即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1309-唯一的子串"><a href="#1309-唯一的子串" class="headerlink" title="1309 唯一的子串"></a>1309 唯一的子串</h5><p>枚举左端点取出子串丢到set或map中去重，自动排序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>待更…</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font face=&quot;黑体&quot; color=&quot;red&quot; size=&quot;4px&quot;&gt;抄袭一时爽，查重火葬场&lt;/font&gt;&lt;/center&gt;

&lt;center&gt;因考前会查重，故仅提供思路参考，代码后续补上，有更好解法欢迎交流&lt;/center&gt;

&lt;h5 id=&quot;1262-Fish&quot;&gt;&lt;a href=&quot;#1262-Fish&quot; class=&quot;headerlink&quot; title=&quot;1262 Fish&quot;&gt;&lt;/a&gt;1262 Fish&lt;/h5&gt;&lt;p&gt;贪心，优先队列维护每个池塘能钓到鱼的数量即可，当前池塘有最多鱼的池塘优先出队列
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="程序设计实践" scheme="quincy.ink/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>湖南大学第15届校赛 H-Longest Common Palindrome Substring</title>
    <link href="quincy.ink/%E6%B9%96%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%AC15%E5%B1%8A%E6%A0%A1%E8%B5%9B-H-Longest-Common-Palindrome-Substring.html"/>
    <id>quincy.ink/湖南大学第15届校赛-H-Longest-Common-Palindrome-Substring.html</id>
    <published>2019-06-02T23:29:56.000Z</published>
    <updated>2019-06-02T23:45:34.256Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/908/H" target="_blank" rel="noopener">原题链接</a></p><p><strong>题意：</strong>给两个1e5长的字符串，求两者最长公共回文子串长度</p><p><strong>思路：</strong></p><ul><li>manacher 分别求出s,t串的mp[]数组，同时也可以求出对应最长奇回文子串长度(a,c)和最长偶回文子串长度(c,d)</li><li>由于manacher求出的是以i为中心的最长回文半径，且长度为len的子串为回文子串,len-2的的子串也为回文子串</li><li>那么s,t的最长公共回文子串长度可能是[0,1,3,5,…min(a,c)]和[0,2,4,6,…,min(b,d)]这两个区间内的一个长度</li><li>hash预处理字符串，然后分别二分这两个区间，check的时候就要用到mp[]数组来判断二分的长度子串是否为回文子串，注意分奇偶讨论</li></ul><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ma[maxn*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">2</span>][maxn*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> len,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">    ma[l++]=<span class="string">'$'</span>;</span><br><span class="line">    ma[l++]=<span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line">        ma[l++]=s[i];</span><br><span class="line">        ma[l++]=<span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ma[l]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mx=<span class="number">0</span>,id=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">        mp[k][i]=mx&gt;i?min(mp[k][<span class="number">2</span>*id-i],mx-i):<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(ma[i+mp[k][i]]==ma[i-mp[k][i]]) mp[k][i]++;</span><br><span class="line">        <span class="keyword">if</span>(i+mp[k][i]&gt;mx)&#123;</span><br><span class="line">            mx=i+mp[k][i];</span><br><span class="line">            id=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> lens,lent;</span><br><span class="line">ull base=<span class="number">233</span>;</span><br><span class="line">ull p[maxn],hs[maxn],ht[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ull <span class="title">getht</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)ht[r]-p[r-l+<span class="number">1</span>]*ht[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;ull&gt;tmp;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    tmp.clear();</span><br><span class="line">    ull ss,tt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*lens+<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mp[<span class="number">0</span>][i]<span class="number">-1</span>&gt;=k)&#123;</span><br><span class="line">            <span class="keyword">if</span>((mp[<span class="number">0</span>][i]<span class="number">-1</span>)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                ss=geths(i/<span class="number">2</span>-k/<span class="number">2</span>,i/<span class="number">2</span>+k/<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ss=geths(i/<span class="number">2</span>-k/<span class="number">2</span>+<span class="number">1</span>,i/<span class="number">2</span>+k/<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            tmp.push_back(ss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(tmp.begin(),tmp.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*lent+<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mp[<span class="number">1</span>][i]<span class="number">-1</span>&gt;=k)&#123;</span><br><span class="line">            <span class="keyword">if</span>((mp[<span class="number">1</span>][i]<span class="number">-1</span>)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                tt=getht(i/<span class="number">2</span>-k/<span class="number">2</span>,i/<span class="number">2</span>+k/<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                tt=getht(i/<span class="number">2</span>-k/<span class="number">2</span>+<span class="number">1</span>,i/<span class="number">2</span>+k/<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(binary_search(tmp.begin(),tmp.end(),tt)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)&#123;</span><br><span class="line">        p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;len;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s+<span class="number">1</span>,t+<span class="number">1</span>))&#123;</span><br><span class="line">        lens=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        lent=<span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++)&#123;</span><br><span class="line">            hs[i]=hs[i<span class="number">-1</span>]*base+s[i]-<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lent;i++)&#123;</span><br><span class="line">            ht[i]=ht[i<span class="number">-1</span>]*base+t[i]-<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>,d=<span class="number">0</span>;</span><br><span class="line">        manacher(s,lens,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*lens+<span class="number">2</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> k=mp[<span class="number">0</span>][i]<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(k&amp;<span class="number">1</span>) a=max(a,k);</span><br><span class="line">            <span class="keyword">else</span>    b=max(b,k);</span><br><span class="line">        &#125;</span><br><span class="line">        manacher(t,lent,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*lent+<span class="number">2</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> k=mp[<span class="number">1</span>][i]<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(k&amp;<span class="number">1</span>) c=max(c,k);</span><br><span class="line">            <span class="keyword">else</span>    d=max(d,k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> Maxodd=min(a,c),Maxeven=min(b,d);</span><br><span class="line">        len.clear();</span><br><span class="line">        len.push_back(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Maxodd;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            len.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=len.size()<span class="number">-1</span>,ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(len[mid])) l=mid;</span><br><span class="line">            <span class="keyword">else</span>                r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=max(ans,len[l]);</span><br><span class="line"></span><br><span class="line">        len.clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=Maxeven;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            len.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">        l=<span class="number">0</span>,r=len.size()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(len[mid])) l=mid;</span><br><span class="line">            <span class="keyword">else</span>                r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=max(ans,len[l]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/908/H&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;给两个1e5长的字符串，求两者最长公共回文子串长度&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;manacher 分别求出s,t串的mp[]数组，同时也可以求出对应最长奇回文子串长度(a,c)和最长偶回文子串长度(c,d)&lt;/li&gt;
&lt;li&gt;由于manacher求出的是以i为中心的最长回文半径，且长度为len的子串为回文子串,len-2的的子串也为回文子串&lt;/li&gt;
&lt;li&gt;那么s,t的最长公共回文子串长度可能是[0,1,3,5,…min(a,c)]和[0,2,4,6,…,min(b,d)]这两个区间内的一个长度&lt;/li&gt;
&lt;li&gt;hash预处理字符串，然后分别二分这两个区间，check的时候就要用到mp[]数组来判断二分的长度子串是否为回文子串，注意分奇偶讨论&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="二分" scheme="quincy.ink/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="manacher" scheme="quincy.ink/tags/manacher/"/>
    
      <category term="hash" scheme="quincy.ink/tags/hash/"/>
    
  </entry>
  
  <entry>
    <title>Template of ACM</title>
    <link href="quincy.ink/Template-of-ACM.html"/>
    <id>quincy.ink/Template-of-ACM.html</id>
    <published>2019-05-26T11:40:21.000Z</published>
    <updated>2019-06-09T01:43:42.096Z</updated>
    
    <content type="html"><![CDATA[<h5 id="ST表"><a href="#ST表" class="headerlink" title="ST表"></a>ST表</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//f[i][j]表示区间[i,i+2^j-1]的最值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i][<span class="number">0</span>]=f[i][<span class="number">0</span>]=a[i];</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=t;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            f[i][j]=max(f[i][j<span class="number">-1</span>],f[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">            d[i][j]=min(d[i][j<span class="number">-1</span>],d[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querymax</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> max(f[l][k],f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querymin</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> min(d[l][k],d[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//next[i] 表示t[i-next[i]...i-1]=t[0...next[i]-1]</span></span><br><span class="line"><span class="comment">//循环节len=m%(m-next[m])==0?m-next[m]:1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    j=Next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;t[i]!=t[j]) j=Next[j];</span><br><span class="line">        Next[++i]=++j;</span><br><span class="line">        <span class="comment">//if(t[++i]==t[++j]) Next[i]=Next[j]; //优化</span></span><br><span class="line">        <span class="comment">//else Next[i]=j;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    getNext(t,m);</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j==<span class="number">-1</span>&amp;&amp;s[i]!=t[j]) j=next[j];</span><br><span class="line">        i++,j++;</span><br><span class="line">        <span class="keyword">if</span>(j&gt;=m)&#123;<span class="comment">//匹配成功</span></span><br><span class="line">            ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ExtendKMP"><a href="#ExtendKMP" class="headerlink" title="ExtendKMP"></a>ExtendKMP</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//next[i]表示t[i...m-1]与t[0...m-1]的最长公共前缀</span></span><br><span class="line"><span class="comment">//extend[i]表示s[i...n-1]与t[0...m-1]的最长公共前缀</span></span><br><span class="line"><span class="keyword">int</span> Next[maxn],extend[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    Next[<span class="number">0</span>]=m;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j+<span class="number">1</span>&lt;m&amp;&amp;t[j]==t[j+<span class="number">1</span>]) j++;</span><br><span class="line">    Next[<span class="number">1</span>]=j;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p=Next[k]+k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) Next[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;m&amp;&amp;t[i+j]==t[j]) j++;</span><br><span class="line">            Next[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extendkmp</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">int</span> m,<span class="keyword">char</span> s[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    getNext(t,m);</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;n&amp;&amp;j&lt;m&amp;&amp;t[j]==s[j]) j++;</span><br><span class="line">    extend[<span class="number">0</span>]=j;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p=extend[k]+k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> L=Next[i-k];</span><br><span class="line">        <span class="keyword">if</span>(i+L&lt;p+<span class="number">1</span>) extend[i]=L;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            j=max(<span class="number">0</span>,p-i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span>(i+j&lt;n&amp;&amp;j&lt;m&amp;&amp;s[i+j]==t[j]) j++;</span><br><span class="line">            extend[i]=j;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="最小表示法"><a href="#最小表示法" class="headerlink" title="最小表示法"></a>最小表示法</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得最小表示法下标的开始位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s[n+i]=s[i];</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">2</span>,k;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=n&amp;&amp;j&lt;=n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;=n&amp;&amp;s[i+k]==s[j+k];k++);</span><br><span class="line">        <span class="keyword">if</span>(k==n) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[i+k]&gt;s[j+k])&#123;<span class="comment">//s[i+k]&lt;s[j+k]最大表示法</span></span><br><span class="line">            i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">char</span> s[maxn],t[maxn];</span><br><span class="line"><span class="keyword">int</span> lens,lent;</span><br><span class="line">ull base=<span class="number">233</span>; <span class="comment">//冲突可换其它素数</span></span><br><span class="line">ull p[maxn],hs[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)&#123;</span><br><span class="line">    p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s+<span class="number">1</span>,t+<span class="number">1</span>);</span><br><span class="line">lens=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">lent=<span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++)&#123;</span><br><span class="line">    hs[i]=hs[i<span class="number">-1</span>]*base+s[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mp[i]表示以i为中心的最长回文的半径，mp[i]-1为原串中最长回文串的长度</span></span><br><span class="line"><span class="comment">//mp[0...2*n+1]/2 求和即为所有子串中回文子串个数</span></span><br><span class="line"><span class="keyword">char</span> ma[maxn*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> mp[maxn*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">    ma[l++]=<span class="string">'$'</span>;</span><br><span class="line">    ma[l++]=<span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        ma[l++]=s[i];</span><br><span class="line">        ma[l++]=<span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ma[l]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mx=<span class="number">0</span>,id=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)&#123;</span><br><span class="line">        mp[i]=mx&gt;i?min(mp[<span class="number">2</span>*id-i],mx-i):<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(ma[i+mp[i]]==ma[i-mp[i]]) mp[i]++;</span><br><span class="line">        <span class="keyword">if</span>(i+mp[i]&gt;mx)&#123;</span><br><span class="line">            mx=i+mp[i];</span><br><span class="line">            id=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="素数筛"><a href="#素数筛" class="headerlink" title="素数筛"></a>素数筛</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> p[maxn],cnt=<span class="number">0</span>;;</span><br><span class="line"><span class="keyword">bool</span> isp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getprime</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(isp,<span class="literal">true</span>,<span class="keyword">sizeof</span>(isp));</span><br><span class="line">    isp[<span class="number">0</span>]=isp[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    isp[<span class="number">2</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;maxn;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(isp[i]) p[cnt++]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;cnt&amp;&amp;p[j]*i&lt;maxn;j++)&#123;</span><br><span class="line">            isp[p[j]*i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//找a[]中&gt;=x最小的那个</span></span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[mid]&gt;=x) r=mid;</span><br><span class="line">    <span class="keyword">else</span>          l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[l];</span><br><span class="line"></span><br><span class="line"><span class="comment">//找a[]中&lt;=x最大的那个</span></span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[mid]&lt;=x) l=mid;</span><br><span class="line">    <span class="keyword">else</span>          r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[l];</span><br></pre></td></tr></table></figure><h5 id="快读"><a href="#快读" class="headerlink" title="快读"></a>快读</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++关闭同步流</span></span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//正负整数</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>; <span class="keyword">bool</span> f=<span class="number">0</span>; <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">'0'</span> || <span class="string">'9'</span>&lt;ch) f|=ch==<span class="string">'-'</span>, ch=getchar();</span><br><span class="line">    <span class="keyword">while</span> (<span class="string">'0'</span>&lt;=ch &amp;&amp; ch&lt;=<span class="string">'9'</span>) x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>, ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> f?-x:x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Updating...
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="Template" scheme="quincy.ink/tags/Template/"/>
    
  </entry>
  
  <entry>
    <title>ARM嵌入式系统 学习笔记</title>
    <link href="quincy.ink/ARM%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/ARM嵌入式系统-学习笔记.html</id>
    <published>2019-04-23T00:15:17.000Z</published>
    <updated>2019-05-28T15:17:29.072Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="第1章-嵌入式系统概述"><a href="#第1章-嵌入式系统概述" class="headerlink" title="第1章 嵌入式系统概述"></a>第1章 嵌入式系统概述</h3><ol><li><p>嵌入式系统定义：嵌入到对象体系中的专用计算机应用系统。</p></li><li><p>应用举例：手机、MP3、打印机、DV等。</p></li><li><p>嵌入式系统</p><ul><li>分类</li></ul><p>①嵌入式微处理器（EMPU，基础是CPU，应用于专门设计的电路板上，满足嵌入式应用的特殊要求，在其工作温度、抗电磁干扰、可靠性等方面做了增强）</p><p>②微控制器（MCU，整个计算机系统集成到一块芯片中，适用于控制）</p><p>③DSP处理器（DSP，应用目标是大批量的消费类产品）</p><p>④片上系统（SOC，分通用和专用，专用芯片可用于互联网安全方面）</p><ul><li>特点：嵌入性、专用性、计算机</li></ul></li><li><p>嵌入式处理器：为了完成特殊的应用而设计的特殊目的处理器。<a id="more"></a></p></li><li><p>嵌入式最小系统：提供嵌入式处理器运行所必须的条件的电路与嵌入式处理器共同组成的系统。</p></li><li><p>嵌入式系统基本概念：</p><ul><li>实时操作系统（RTOS）：一段在嵌入式系统启动后首先执行的背景程序，用户的应用程序是运行于RTOS之上的各个任务，RTOS根据各个任务的要求，进行资源管理、消息管理、任务调度及异常处理等工作。</li><li>资源：程序运行时可使用的软、硬件环境。</li><li>共享资源：被一个以上任务使用的资源。</li><li>任务：一个线程。</li><li>任务切换：保存当前运行任务的工作状态并入栈，把下一个要运行任务的当前状态从栈中装回CPU寄存器并开始运行。</li><li>内核：负责管理各个任务，提供任务切换的基本服务。</li><li>非占先式内核：中断后回到中断了的任务。</li><li>占先式内核：中断后让进入就绪态优先级最高的开始运行。</li><li>任务优先级：表示任务被调度的优先程度。</li><li>中断：一种硬件机制，用于通知CPU有个异步事件发生了。</li></ul></li><li><p>常见嵌入式实时操作系统</p><ul><li>μClinux：开源</li><li>Windows CE：开放</li><li>VxWorks：实时性卓越</li><li>μC/OS - ΙΙ：开源、抢占式</li></ul></li></ol><p><br></p><h3 id="第2章-ARM7体系结构"><a href="#第2章-ARM7体系结构" class="headerlink" title="第2章 ARM7体系结构"></a>第2章 ARM7体系结构</h3><ol><li><p>ARM简介</p><ul><li>ARM公司是一家知识产权(IP)供应商，它与一般的半导体公司最大的不同就是不制造芯片且不向终端用户出售芯片，而是通过转让设计方案，由合作伙伴生产出各具特色的芯片。</li><li>ARM架构是ARM公司面向市场设计的第一款低成本RISC微处理器。</li></ul></li><li><p>ARM7后缀含义：</p><ul><li>带M：64位乘法指令</li><li>带D：支持片上调试</li><li>带T：高密度16位Thumb指令集扩展</li><li>带I：Embedded ICE硬件仿真功能模块</li></ul></li><li><p>ARM处理器使用冯·诺依曼结构，指令数据共用一条32位总线；直接支持8位字节(2^32)，16位半字(2^31)或者32位字(2^30)的数据类型。</p></li><li><p>如果一个数据是以字方式存储的，那么它就是字对齐的，否则就是非字对齐的；特征：bit0=bit1=0,其他任意。</p><p>如果一个数据是以半字方式存储的，那么它就是半字对齐的，否则就是非半字对齐的；特征：bit0=0,其他任意。</p></li><li><p><strong>流水线</strong></p><p>三级：①取指：从存储器装载一条指令 ②译码：识别将要执行的指令 ③执行：处理指令并将结果写回寄存器</p></li><li><p>ARM处理器状态</p><ul><li>ARM指令集为32位长度，效率高，代码密度低，都是有条件执行，具有最完整的功能；Thumb指令集为16位长度，代码密度较高，只有一条具备有条件执行，能实现ARM指令集的大部分功能。在功能上可以认为Thumb是ARM的子集。</li><li>当前程序状态寄存器CPSR中的控制位<strong>T</strong>反映处理器正在操作的状态，T=0，处理器处于ARM状态，T=1，处理器处于Thumb状态。</li><li>从一个ARM例程调用另一个Thumb例程时，内核必须切换状态，反之亦然。<strong>BX分支</strong>将ARM内核的操作状态在ARM和Thumb之间进行切换。</li></ul></li></ol><p>&nbsp;&nbsp;&nbsp;&nbsp;7. ARM处理器模式</p><ul><li>除了用户模式以外，其余所有6种模式称之为非用户模式</li><li>特权模式中除去系统模式外的5种模式称之为异常模式</li><li>用户(usr)、系统(sys)、管理(svc)、中止(abt)、未定义(und)、中断(irq)、快速中断(fiq)</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;8. ARM内部寄存器</p><ul><li>ARM处理器内部共有37个用户可访问的32位寄存器，其中有6个32位状态寄存器目前只使用了其中12位；31个通用寄存器+6个状态寄存器(1个CPSR+5个SPSR)；不可同时访问，对其访问取决于处理器状态和处理器模式。</li><li>堆栈指针R13(SP)，保存堆栈的出入口地址、待使用寄存器内容</li><li>链接寄存器R14(LR)，保存子程序和子程序的返回地址</li><li>程序计数器R15(PC)，总是指向“正在取指”的指令</li><li>所有模式共享一个程序状态寄存器CPSR，ARM通过此寄存器监视和控制内部操作的。SPSR为异常模式中保存CPSR当前值的备份程序寄存器。</li><li>程序状态寄存器格式</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">N</th><th style="text-align:center">Z</th><th style="text-align:center">C</th><th style="text-align:center">V</th><th style="text-align:center">…</th><th style="text-align:center">I</th><th style="text-align:center">F</th><th style="text-align:center">T</th><th style="text-align:center">M4</th><th style="text-align:center">M3</th><th style="text-align:center">M2</th><th style="text-align:center">M1</th><th style="text-align:center">M0</th></tr></thead><tbody><tr><td style="text-align:center">负</td><td style="text-align:center">0</td><td style="text-align:center">进位</td><td style="text-align:center">溢出</td><td style="text-align:center">保留</td><td style="text-align:center">irq禁止</td><td style="text-align:center">fiq禁止</td><td style="text-align:center">状态位</td><td style="text-align:center">模式位</td><td style="text-align:center">.</td><td style="text-align:center">.</td><td style="text-align:center">.</td><td style="text-align:center">.</td></tr></tbody></table></div><p>&nbsp;&nbsp;&nbsp;&nbsp;9. 模式控制位</p><div class="table-container"><table><thead><tr><th style="text-align:center">M[4:0]</th><th style="text-align:center">模式</th></tr></thead><tbody><tr><td style="text-align:center">10000</td><td style="text-align:center">用户</td></tr><tr><td style="text-align:center">10001</td><td style="text-align:center">快速中断</td></tr><tr><td style="text-align:center">10010</td><td style="text-align:center">中断</td></tr><tr><td style="text-align:center">10011</td><td style="text-align:center">管理</td></tr><tr><td style="text-align:center">10111</td><td style="text-align:center">中止</td></tr><tr><td style="text-align:center">11011</td><td style="text-align:center">未定义</td></tr><tr><td style="text-align:center">11111</td><td style="text-align:center">系统</td></tr></tbody></table></div><p>&nbsp;&nbsp;&nbsp;&nbsp;10. 异常向量表</p><div class="table-container"><table><thead><tr><th style="text-align:center">地址</th><th style="text-align:center">异常</th><th style="text-align:center">模式</th></tr></thead><tbody><tr><td style="text-align:center">0x0000 0000</td><td style="text-align:center">复位</td><td style="text-align:center">管理</td></tr><tr><td style="text-align:center">0x0000 0004</td><td style="text-align:center">未定义指令</td><td style="text-align:center">未定义</td></tr><tr><td style="text-align:center">0x0000 0008</td><td style="text-align:center">软件中断</td><td style="text-align:center">管理</td></tr><tr><td style="text-align:center">0x0000 000C</td><td style="text-align:center">中止（预取）</td><td style="text-align:center">中止</td></tr><tr><td style="text-align:center">0x0000 0010</td><td style="text-align:center">中止（数据）</td><td style="text-align:center">中止</td></tr><tr><td style="text-align:center">0x0000 0014</td><td style="text-align:center">保留</td><td style="text-align:center">保留</td></tr><tr><td style="text-align:center">0x0000 0018</td><td style="text-align:center">IRQ</td><td style="text-align:center">中断</td></tr><tr><td style="text-align:center">0x0000 001C</td><td style="text-align:center">FIQ</td><td style="text-align:center">快速中断</td></tr></tbody></table></div><p>&nbsp;&nbsp;&nbsp;&nbsp;11. 中断优先级</p><div class="table-container"><table><thead><tr><th style="text-align:center">优先级</th><th style="text-align:center">异常</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">复位</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">数据中止</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">FIQ</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">IRQ</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">预取指中止</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">未定义指令</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">软件中断SWI</td></tr></tbody></table></div><p>&nbsp;&nbsp;&nbsp;&nbsp;12. ARM体系的储存系统</p><p>&nbsp;&nbsp;&nbsp;&nbsp;位于地址A的字包含的字节位于A、A+1、A+2、A+3；</p><ul><li><p>小端格式：一个字中的最低地址被看作是最低位字节，最高地址的字节被看作是最高位字节，储存器系统字节0连接到数据线7~0；</p></li><li><p>大端格式：一个字中的最高位字节保存在最低地址，最低位字节保存在最高位地址，储存器系统字节0连接到数据线31~24；</p><p><img src="https://s2.ax1x.com/2019/05/21/EztbfU.jpg" alt="EztbfU.jpg"></p></li></ul><p><br></p><h3 id="第3章-ARM7TDMI（-S）指令系统"><a href="#第3章-ARM7TDMI（-S）指令系统" class="headerlink" title="第3章 ARM7TDMI（-S）指令系统"></a>第3章 ARM7TDMI（-S）指令系统</h3><ol><li><p>ARM处理器寻址方式</p><ul><li><p>寄存器寻址： 寄存器编号</p><blockquote><p>MOV  R1,R2 ；将R2的值存入R1</p><p>SUB R0,R1,R2；将R1的值减R2的值结果存入R0</p></blockquote></li><li><p>立即寻址： 操作数</p><blockquote><p>SUBS R0,R0,#1；R0-1存入R0</p><p>MOV R0,#0xFF000；将立即数0xFF000装入R0</p></blockquote></li><li><p>寄存器移位寻址： ASR(1-32)、LSL(1-31)、LSR(1-32)、ROR(1-31)、RRX(1)</p><blockquote><p>MOV R0,R2,LSL #3 ；R2的值左移3位结果存入R0</p><p>ANDS R1,R1,R2,LSL R3 ；R2的值左移R3位，结果与R1相与后存入R1</p></blockquote></li><li><p>寄存器间接寻址： []</p><blockquote><p>LDR R1,[R2] ；将R2指向的储存单元的数据读出存入R1    //加载字数据</p><p>SWP R1,R1,[R2]；将R2指向的储存单元的数据与R1的值交换</p></blockquote></li><li><p>基址寻址</p><blockquote><p>STR R1,[R0,#-4]！；将R1的值存入R0-4指定的储存单元    //存储字数据</p></blockquote></li><li><p>多寄存器寻址：！，{ }</p><blockquote><p>LDMIA R1!,{R2-R7,R12}；将R1指向的单元中的数据读出到R2-R7,R12中，R1++；//多寄存器加载</p><p>STMIA R0!,{R2-R7,R12}；将R2-R7,R12的值保存到R0指向的存储单元中，R0++;   //多寄存器存储</p></blockquote></li><li><p>堆栈寻址</p><p>满堆栈：指向最后压入栈的有效数据项，向移动指针再写数据；</p><p>空堆栈：指向下一个待压入数据的空位置，先写入数据在移动指针；</p><p>X递增：增大地址向上增长；X递减：减小地址向下增长。</p></li><li><p>相对寻址</p><p>程序计数器PC提供基准地址，地址码字段作为偏移量</p></li></ul></li></ol><p><br></p><h3 id="第4章-LPC2000系列ARM硬件结构"><a href="#第4章-LPC2000系列ARM硬件结构" class="headerlink" title="第4章 LPC2000系列ARM硬件结构"></a>第4章 LPC2000系列ARM硬件结构</h3><ol><li><p>为存储器分配地址的过程称为存储器映射；但为了增加系统的灵活性，系统中有部分存储单元（主要包括引导块(Boot Block)和用于保存向量表的少量存储单元）可以同时出现在不同地址上，则称为存储器重映射。</p></li><li><p>存储器重映射并不是对映射单元的内容进行了复制，只是将多个地址指向了同一个存储单元，通过“存储器管理部件”实现。即一个物理地址对应多个逻辑地址。</p></li><li><p>Boot Block是芯片设计厂家在LPC2000系列ARM内部固化的一段代码，用户无法对其修改或删除。这段代码在芯片复位后被首先运行，其功能主要是判断运行哪个存储器上的程序，检查用户代码是否有效，判断芯片是否被加密，芯片的在应用编程(IAP)以及在系统编程功能(ISP)。</p></li><li><p>系统启动代码(Boot Loader)：大部分由汇编指令构成，可以实现向量表定义、堆栈初始化、系统变量初始化、中断系统初始化、I/O初始化、外围初始化、地址重映射等操作。启动顺序：Boot Block-&gt;Boot Loader-&gt;操作系统</p></li><li><p>时钟系统概述：时钟是计算机系统的脉搏，处理器核在一拍接一拍的时钟驱动下完成指令执行、状态变换等动作。外设部件在时钟的驱动下进行着各种工作，比如串口数据的收发、A/D转换、定时器计数等。因此时钟对于一个计算机系统是至关重要的，通常时钟系统出现问题也是最致命的，比如振荡器不起振、振荡不稳、停振等。组成：晶体振荡器、唤醒定时器、锁相环（PLL）和VPB分频器。</p></li><li><p>晶体振荡器的两个模式：使用外部时钟源时，称为“从属模式”；使用外部晶体时，称为“振荡模式”。</p></li><li><p>LPC2000系列ARM两个复位源：</p><ul><li>外部复位：通过把芯片的$\overline{RESET}$引脚拉为低电平使芯片复位。$\overline{RESET}$引脚为施密特触发输入引脚，带有一个额外的干扰滤波器，可以滤除非常短促的脉冲信号，使处理器不会被干扰脉冲意外复位，或者被不稳定的复位信号复位多次。<ul><li>$\overline{RESET}$需要保持一段时间的低电平，必须在晶振稳定运行之后才能撤除。</li><li>在系统编程(ISP)：是一种非常实用的片内Flash烧写方式。ISP工作时，通过<strong>UART0</strong>使用约定协议与计算机上的ISP软件进行通信，并按用户的操作要求，调用内部的IAP代码实现各种功能。</li></ul></li><li>看门狗复位：内置看门狗部件，可以利用此部件来复位处理器。</li></ul></li><li><p>锁相环PLL</p><ul><li>作用：将振荡器产生的时钟频率$F_{OSC}$进行升频。</li><li>LPC2000系列ARM是基于ARM7内核的，该内核的工作频率基本在100Mhz以下，所以LPC2000系列ARM大部分支持最高60MHz的内核时钟，少部分支持70MHz的内核时钟。</li><li>PLL频率计算：$F_{OSC}$经流控振荡器CCO得到$F_{CCO}$，$F_{CCO}$经过2P分频后得$F_{CCLK}=F_{CCO}/(2*P)$，$F_{CCO}/(2*P)$经M分频后得到$F_{CCO}/(2*P*M) = F_{OSC}$</li><li><p><strong>PLL设置</strong>  <a href="https://www.cnblogs.com/tureno/articles/2714811.html" target="_blank" rel="noopener">参考链接</a></p><ul><li><p>$F_{CCO}$取值必须在156～320MHz内</p></li><li><p>M取值1-32，将M-1放在PLLCFG[4:0]</p></li><li><p>P取值1,2,4,8，将$log_2P$放在PLLCFG[6:5]</p></li><li><p>PLLCON寄存器:包涵使能连接PLL的位,也就是控制PLL是否进行连接,这个连接需要在向PLLFEED发送正确的信息(馈送序列)的时候才生效,否则及时将使能位置位,PLL也不会连接到电路中。PLLCON必须在PLL开始连接之前就设置好,否则会造成系统不可预知的错误,<strong>先设置1后设置3</strong>。</p></li><li><p>PLLSTAT寄存器:从里面可以读出PLLCON,PLLCFG的值,但必须是在PLLFEED的馈送序列被发送,PLLCON,PLLCFG生效以后才可以读到正确的值(<strong>while(PLLSTAT &amp; (1&lt;&lt;10) == 0) ;</strong>)</p></li><li><p>PLLFEED寄存器:向此寄存器以连续的VPB总线周期写入<strong>0xaa,0x55</strong>,即馈送序列，在正确的序列被写入PLLFEED之后,PLLCON,PLLCFG才生效,PLL电路才能正确的连接到电路中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PLLCON = <span class="number">1</span>;</span><br><span class="line">PLLCFG = (M<span class="number">-1</span>)|（log2(P)&lt;&lt;<span class="number">5</span>）;</span><br><span class="line">PLLFEED = <span class="number">0xaa</span>;</span><br><span class="line">PLLFEED = <span class="number">0x55</span>;</span><br><span class="line"><span class="keyword">while</span>(PLLSTAT &amp; (<span class="number">1</span>&lt;&lt;<span class="number">10</span>) == <span class="number">0</span>);</span><br><span class="line">PLLCON = <span class="number">3</span>;</span><br><span class="line">PLLFEED = <span class="number">0xaa</span>;</span><br><span class="line">PLLFEED = <span class="number">0x55</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ol><p>&nbsp;&nbsp;9. VPB分频器</p><ul><li>作用：将$F_{CCLK}$分频，方便外设工作、降低系统功耗</li></ul><p>&nbsp;&nbsp;10. 两种节电模式：</p><ul><li>空闲模式：处理器停止执行指令，使功耗最低降至1～2mA电流</li><li>掉电模式：振荡器关闭，芯片没有任何内部时钟，功耗降低到几乎为零</li></ul><p>&nbsp;&nbsp;11. bank0~bank3的片选信号分别是CS0~CS3。</p><p>&nbsp;&nbsp;12. 外部存储器接口</p><ul><li>LPC2200的外部存储器宽度可设定为8位，16位和32位</li><li>宽度为8位时，有效数据线D7~D0，只有BLS0有效</li><li>宽度为16位时，有效数据线D15~D0，BLS0、BLS1都有效</li><li>操作16位存储器时，需将LPC2200的地址线A1连接到存储器地址A0处</li></ul><p>&nbsp;&nbsp;13. PSRAM读写数据</p><ul><li><p>写入16位</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">uint16 *point16;</span><br><span class="line">uint16 data16 = <span class="number">0x00</span>;</span><br><span class="line">point16 = (uint16 *)<span class="number">0x80001020</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">*point16 = data16++; <span class="comment">//循环向地址0x80001020处写入数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>写入低8位</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">uint8 *point8;</span><br><span class="line">uint8 data8 = <span class="number">0x00</span>;</span><br><span class="line">point8 = (uint8 *)<span class="number">0x80001010</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">*point8 = data8++;<span class="comment">//循环向地址0x80001010处写入数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>写入高8位</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">uint8 *point8;</span><br><span class="line">uint8 data8 = <span class="number">0x00</span>;</span><br><span class="line">point8 = (uint8 *)<span class="number">0x80001011</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">*point8 = data8++;<span class="comment">//循环向地址0x80001011处写入数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>读取8位</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">uint8 RcvDate8;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    uint8 *point8;</span><br><span class="line">    point8 = (uint*)<span class="number">0x80001010</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        RcvDate8 = *point8++;<span class="comment">//读取0x80001010处的数据</span></span><br><span class="line">        RcvDate8 = *point8++;<span class="comment">//读取0x80001011处的数据</span></span><br><span class="line">        RcvDate8 = *point8++;<span class="comment">//读取0x80001012处的数据</span></span><br><span class="line">        RcvDate8 = *point8--;<span class="comment">//读取0x80001013处的数据</span></span><br><span class="line">        point8--;</span><br><span class="line">        point8--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;14. ARM的大部分引脚都具有多种功能，即引脚复用。但是一个引脚在同一时刻只能使用其中一个功能，通过配置相关寄存器控制多路开关与片内外设。</p><p>&nbsp;&nbsp;15. GPIO的特性</p><ul><li>可以独立控制每个GPIO口的方向（输入/输出模式）</li><li>可以独立设置每个GPIO口的输出状态（高/低电平）</li><li>所有GPIO口在复位后默认为输入状态</li></ul><p>&nbsp;&nbsp;16. GPIO应用示例</p><p>​    <img src="https://s2.ax1x.com/2019/05/21/VSfToV.jpg" alt="VSfToV.jpg"></p><ul><li><p>设置P0.0为输出高电平</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PINSEL0 &amp;= <span class="number">0xFFFFFFFC</span>; <span class="comment">//设置引脚连接模块，将P0.0设置为GPIO功能</span></span><br><span class="line">IO0DIR |= <span class="number">0x00000001</span>; <span class="comment">//将P0.0设置为输出</span></span><br><span class="line">IOSET = <span class="number">0x00000001</span>; <span class="comment">//设置P0.0输出高电平</span></span><br></pre></td></tr></table></figure></li><li><p>使用GPIO控制蜂鸣器</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BEEPCON 0x00000080 <span class="comment">//P0.7控制B1，低电平蜂鸣</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    PINSEL0 = <span class="number">0x00000000</span>; <span class="comment">//设置引脚连接GPIO</span></span><br><span class="line">    IO0DIR = BEEPCON; <span class="comment">//设置I/O为输出</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        IO0SET = BEEPCON; <span class="comment">//BEEPCON=1</span></span><br><span class="line">        Delay(<span class="number">10</span>);</span><br><span class="line">        IO0CLR = BEEPCON; <span class="comment">//BEEPCON=0</span></span><br><span class="line">        Delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    reuturn <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>读取P0.0引脚的电平状态</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uint32 PinStat; <span class="comment">//定义存放I/O状态的变量</span></span><br><span class="line">PINSEL0 &amp;= <span class="number">0xFFFFFFFC</span>; <span class="comment">//设置引脚连接模块，将P0.0设置为GPIO功能</span></span><br><span class="line">IO0DIR &amp;= <span class="number">0xFFFFFFFE</span>; <span class="comment">//将P0.0设置为输入</span></span><br><span class="line">PinStat = IO0PIN&amp;<span class="number">0x01</span>; <span class="comment">//通过IP0PIN寄存器获取P0.0当前电平状态</span></span><br></pre></td></tr></table></figure></li><li><p>读取按键状态</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BEEPCON 0x00000080</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN_P014 0x00004000 <span class="comment">//定义P0.14屏蔽字</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    uint32 i;</span><br><span class="line">    PINSEL0 = <span class="number">0x00000000</span>; <span class="comment">//设置引脚连接GPIO</span></span><br><span class="line">    IO0DIR = BEEPCON; <span class="comment">//设置B1控制口为输出，其他I/O为输入</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((IO0DIR&amp;PIN_P014)!=<span class="number">0</span>) IO0SET = BEEPCON;</span><br><span class="line">        <span class="keyword">else</span> IO0CLR = BEEPCON;</span><br><span class="line">        Delay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在多个I/O口线上输出数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DataBus 0xFF</span></span><br><span class="line">PINSEL0 &amp;= <span class="number">0xFFFF0000</span>；<span class="comment">//设置引脚连接模块，将P0.0~P0.7设置为GPIO功能</span></span><br><span class="line">IO0DIR |= DataBus; <span class="comment">//将所有I/O口设置为输出</span></span><br><span class="line">IO0CLR = DataBus; <span class="comment">//将所有I/O口设置为低电平输出</span></span><br><span class="line">IO0SET = Data; <span class="comment">//将输出的数据从I/O口输出</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;17. 中断分类</p><ul><li>快速中断请求（FIQ）：优先级最高</li><li>向量IRQ：中等优先级，16个优先级，每个中断源分别设置服务程序入口</li><li>非向量IRQ：优先级最低，支持一个非向量中断，所有中断共用一个服务程序入口</li></ul><p>&nbsp;&nbsp;18. VIC可以管理32路中断请求。</p><p>&nbsp;&nbsp;19. 中断触发方式</p><ul><li>边沿触发：上升沿触发、下降沿触发</li><li>电平触发：高电平触发、低电平触发</li></ul><p>&nbsp;&nbsp;20. 外部中断应用示例</p><ul><li><p>EINT0低电平中断初始化</p><p><img src="https://s2.ax1x.com/2019/05/21/VpSrex.jpg" alt="VpSrex.jpg"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PINSEL1 = (PINSEL1&amp;<span class="number">0xFFFFFFFC</span>)|<span class="number">0x01</span>; <span class="comment">//选择P0.16为EINT0</span></span><br><span class="line">EXTMODE = EXTMODE&amp;<span class="number">0x0E</span>; <span class="comment">//电平触发</span></span><br><span class="line">EXTPOLAR = EXTPOLAR&amp;<span class="number">0x0E</span>; <span class="comment">//低电平中断</span></span><br><span class="line"><span class="comment">/*设置向量中断控制器*/</span></span><br><span class="line">VICIntSelect = VICIntSelect&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">14</span>)); <span class="comment">//EINT0分配为IRQ中断</span></span><br><span class="line">VICVectCntl0 = <span class="number">0x20</span>|<span class="number">14</span>; <span class="comment">//EINT分配为向量IRQ通道0</span></span><br><span class="line">VICVectAddr0 = (uint32)EINT0_ISR; <span class="comment">//向量IRQ通道0的中断服务程序地址为EINT0_ISR</span></span><br><span class="line">VICIntEnable = (<span class="number">1</span>&lt;&lt;<span class="number">14</span>); <span class="comment">//EINT0中断使能</span></span><br></pre></td></tr></table></figure></li><li><p>EINT0下降沿中断初始化</p><p><img src="https://s2.ax1x.com/2019/05/21/VpSyTK.jpg" alt="VpSyTK.jpg"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PINSEL1 = (PINSEL1&amp;<span class="number">0xFFFFFFFC</span>)|<span class="number">0x01</span>;</span><br><span class="line">EXTMODE = EXTMODE|<span class="number">0x01</span>;</span><br><span class="line">EXTPOLAR = EXTPOLAR&amp;<span class="number">0x0E</span>;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;21. SPI总线系统是一种<strong>同步串行</strong>外设接口，允许MCU与各种外围设备一串行方式进行通信、数据交换。</p><p>&nbsp;&nbsp;22. $I^2C$BUS是NXP半导体公司推出的芯片间<strong>串行</strong>传输总线，它以2根连线实现了完善的<strong>双向数据传送</strong>，可以极方便的构成多机系统和外围器件拓展系统。</p><p>&nbsp;&nbsp;23. LPC2000系列ARM7微控制器包含有2个符合16C550工业标准的<strong>异步</strong>串行口（UART）：UART0和UART1。其中UART0只提供<strong>TXD（发送）</strong>和<strong>RXD（接受）</strong>信号引脚，而UART1增加了一个调制解调器（Modem）接口。</p><p>&nbsp;&nbsp;24. UART应用示例</p><ul><li><p>UART0初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BPS 115200</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART0_Ini</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    uint16 Fdiv;</span><br><span class="line">    U0LCR = <span class="number">0x83</span>; <span class="comment">//DLAB=1,可设置波特率</span></span><br><span class="line">    Fdiv = (Fpclk/<span class="number">16</span>)/UART_BPS;<span class="comment">//设置波特率</span></span><br><span class="line">    U0DLM = Fdiv/<span class="number">256</span>;<span class="comment">//除数锁存高位寄存器</span></span><br><span class="line">    U0DLL = Fdiv%<span class="number">256</span>;<span class="comment">//除数锁存低位寄存器</span></span><br><span class="line">    U0LCR = <span class="number">0x03</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><img src="https://s2.ax1x.com/2019/05/21/VSze29.jpg" alt="VSze29.jpg"></p></li><li><p>UART0查询方式接受数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">uint8 <span class="title">UART0_RcvByte</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    uint8 rcv_data;</span><br><span class="line">    <span class="keyword">while</span>((U0LSR&amp;<span class="number">0x01</span>)==<span class="number">0</span>);<span class="comment">//状态</span></span><br><span class="line">    rcv_data = U0RBR;<span class="comment">//接受缓存</span></span><br><span class="line">    <span class="keyword">return</span> rcv_data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UART0中断方式接受数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __<span class="function">irq <span class="title">UART_Exception</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">switch</span>(U0IIR&amp;<span class="number">0x0f</span>)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x04</span>:<span class="comment">//发生RDA中断</span></span><br><span class="line">            <span class="comment">//从接受FIFO中读取数据</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x0c</span>:<span class="comment">//发生字符超时中断——CTI</span></span><br><span class="line">            <span class="keyword">while</span>((U0LSR&amp;<span class="number">0x01</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//如果接受FIFO中含有的有效数据，就读取UnRBR寄存器 </span></span><br><span class="line">                RcvData[i++]=U0RBR;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">default</span>: </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    VICVectAddr = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;25. 看门狗</p><ul><li>带内部预分频器的可编程32位定时器</li></ul><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;第1章-嵌入式系统概述&quot;&gt;&lt;a href=&quot;#第1章-嵌入式系统概述&quot; class=&quot;headerlink&quot; title=&quot;第1章 嵌入式系统概述&quot;&gt;&lt;/a&gt;第1章 嵌入式系统概述&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;嵌入式系统定义：嵌入到对象体系中的专用计算机应用系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用举例：手机、MP3、打印机、DV等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;嵌入式系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;①嵌入式微处理器（EMPU，基础是CPU，应用于专门设计的电路板上，满足嵌入式应用的特殊要求，在其工作温度、抗电磁干扰、可靠性等方面做了增强）&lt;/p&gt;
&lt;p&gt;②微控制器（MCU，整个计算机系统集成到一块芯片中，适用于控制）&lt;/p&gt;
&lt;p&gt;③DSP处理器（DSP，应用目标是大批量的消费类产品）&lt;/p&gt;
&lt;p&gt;④片上系统（SOC，分通用和专用，专用芯片可用于互联网安全方面）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点：嵌入性、专用性、计算机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;嵌入式处理器：为了完成特殊的应用而设计的特殊目的处理器。
    
    </summary>
    
      <category term="嵌入式系统" scheme="quincy.ink/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="嵌入式系统" scheme="quincy.ink/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>算法设计与分析 学习笔记</title>
    <link href="quincy.ink/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/算法设计与分析-学习笔记.html</id>
    <published>2019-03-19T01:06:26.000Z</published>
    <updated>2019-06-02T23:37:41.450Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h4 id="第1章-算法概述"><a href="#第1章-算法概述" class="headerlink" title="第1章 算法概述"></a>第1章 算法概述</h4><p>算法定义：解决问题的有穷序列指令</p><p>算法的性质：输入、输出、确定性、有限性</p><p>程序和算法的区别：程序可不满足有限性，比如操作系统 </p><p>求上下界函数：</p><script type="math/tex; mode=display">\lim_{n\rightarrow\infty} \frac{f(n)}{g(n)} = \begin{cases}0, & \text{f(n)=O(g(n))}\\\infty, & \text{f(n)= $\Omega$(g(n))}\\c,& \text{f(n)=$\Theta$(g(n))} \end{cases}</script><a id="more"></a><h4 id="第2章-递归与分治策略"><a href="#第2章-递归与分治策略" class="headerlink" title="第2章 递归与分治策略"></a>第2章 递归与分治策略</h4><p>一般递归方程时间复杂度分析</p><script type="math/tex; mode=display">T(n)<=\begin{cases}1,&\text{n=1}\\ aT(n∣b)+D(n),&\text{n>1}     \end{cases}</script><p>其中，a是子问题的个数，b是递减的步长，|表示递减方式，D(n)是合成子问题的开销</p><p>当|为减法：</p><script type="math/tex; mode=display">T(n)<=\begin{cases}O(a^n),&\text{a>1}\\ O(n),&\text{a=1}     \end{cases}</script><p>当|为除法：</p><p>$p=log_ba$</p><p>①D(n)为常数</p><script type="math/tex; mode=display">T(n)<=\begin{cases}O(n^p),&\text{a>1}\\ O(log_bn),&\text{a=1}     \end{cases}</script><p>②D(n)为线性函数cn</p><script type="math/tex; mode=display">T(n)<=\begin{cases}O(n),&\text{a<b}\\ O(nlog_bn),&\text{a=b}\\ O(n^p),&\text{a>b} \end{cases}</script><p>③D(n)为幂函数$n^x$</p><script type="math/tex; mode=display">T(n)<=\begin{cases}O(n^x),&\text{a<D(b)}\\ O(n^plog_bn),&\text{a=D(b)}\\ O(n^p),&\text{a>D(b)} \end{cases}</script><h4 id="第3章-动态规划"><a href="#第3章-动态规划" class="headerlink" title="第3章 动态规划"></a>第3章 动态规划</h4><p>动态规划算法的基本要素：最优子结构性质、重叠子问题性质</p><p>设计算法步骤：</p><ul><li>找出最优解性质，刻画结构特征</li><li>递归定义最优值</li><li>自底向上计算最优值</li><li>根据最优值构造最优解</li></ul><h4 id="第4章-贪心算法"><a href="#第4章-贪心算法" class="headerlink" title="第4章 贪心算法"></a>第4章 贪心算法</h4><p>贪心算法的基本要素：贪心选择性质、最优子结构性质</p><h4 id="第五章-回溯法"><a href="#第五章-回溯法" class="headerlink" title="第五章 回溯法"></a>第五章 回溯法</h4><h4 id="第六章-分支限界法"><a href="#第六章-分支限界法" class="headerlink" title="第六章 分支限界法"></a>第六章 分支限界法</h4><p>回溯法和分界限界法的区别：</p><ul><li>求解目标不同：求出所有解；求出最优解</li><li>搜索方式不同：DFS；BFS</li></ul><p><br></p><p>待更…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h4 id=&quot;第1章-算法概述&quot;&gt;&lt;a href=&quot;#第1章-算法概述&quot; class=&quot;headerlink&quot; title=&quot;第1章 算法概述&quot;&gt;&lt;/a&gt;第1章 算法概述&lt;/h4&gt;&lt;p&gt;算法定义：解决问题的有穷序列指令&lt;/p&gt;
&lt;p&gt;算法的性质：输入、输出、确定性、有限性&lt;/p&gt;
&lt;p&gt;程序和算法的区别：程序可不满足有限性，比如操作系统 &lt;/p&gt;
&lt;p&gt;求上下界函数：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\lim_{n\rightarrow\infty} \frac{f(n)}{g(n)} = \begin{cases}0, &amp; \text{f(n)=O(g(n))}\\\infty, &amp; \text{f(n)= $\Omega$(g(n))}\\c,&amp; \text{f(n)=$\Theta$(g(n))} \end{cases}&lt;/script&gt;
    
    </summary>
    
      <category term="算法设计与分析" scheme="quincy.ink/categories/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
    
      <category term="算法设计与分析" scheme="quincy.ink/tags/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>物联网概论 学习笔记</title>
    <link href="quincy.ink/%E7%89%A9%E8%81%94%E7%BD%91%E6%A6%82%E8%AE%BA-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/物联网概论-学习笔记.html</id>
    <published>2019-03-07T15:06:49.000Z</published>
    <updated>2019-05-09T15:08:17.059Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>物联网（IoT）：Internet of Things</p></li><li><p>物联网是具有自我<font color="Red"><strong>标示、感知和智能</strong></font>的物理实体基于通信技术相互连接形成的网络，这些物理设备可以在<font color="Red"><strong>无需人工干预</strong></font>的条件下实现<font color="Red"><strong>协同和互动</strong></font>，为人们提供<font color="Red"><strong>智慧和集约的服务</strong></font>，传感网是物联网的基础，是物联网的组成部分</p></li><li><p>物联网三层体系结构：感知层、网络层和应用层</p><p>感知层是物联网的皮肤和五官——识别物体，采集信息；</p><p>网络层是物联网的神经中枢和大脑——信息传递和处理；</p><p>应用层是物联网的“社会分工”——与行业需求结合，实现广泛智能化</p><a id="more"></a></li><li><p>RFID全称：Radio Frequency Identification 射频识别</p></li><li><p>RFID系统的基本组成：</p><p>①硬件组成：RFID标签、识读器、天线和主机</p><p>②软件组成：RFID系统软件、中间件和应用软件</p></li><li><p>RFID系统结构通过<font color="yellow"><strong>空中接口</strong></font>将电子标签与读写器连接</p></li><li><p>RFID系统的原理：</p><p>①耦合(Coupling)：根据需求和成本可利用电磁波和磁感应</p><p>②磁耦合</p><p>③电磁波耦合(反向散射原理)</p></li><li><p>RFID频段分布</p><p>低频：125.124KHz 恶劣环境下使用</p><p>高频：13.56MHz 门禁卡、公交卡等 （ISO/IEC 14443标准 非接触集成电路接近卡）</p><p>超高频：433.92Mhz / 868-960Mhz</p><p>微波：2.45GHz</p></li><li><p>一般传感器的定义：测量装置、输入与输出有对应关系、有一定的精确度</p></li><li><p>一般传感器的组成：</p><p>①敏感元件：直接感受被测量、并输出与被测量成确定关系的某一物理量的元件</p><p>②转换元件：敏感元件的输出就是它的输入，将感受到的非电量直接转换为电量的元件</p><p>③测量电路：将转换元件输出的电量变换为便于显示、记录、控制、处理的有用电信号</p></li><li><p>传感器的<strong>静态特性</strong>：</p><p>①线性度：指其输出量与输入量之间的实际关系曲线(即静态特征曲线)偏离直线的程度，又称为非线性误差</p><p>②灵敏度：指传感器在稳态下的输出变化量△y与引起变化的输入变化△x之比</p><p>③迟滞：传感器在正(输入量增大)和反(输入量减小)行程期间，其输出-输入特性曲线不重合的现象</p><p>④重复性：在输入按同一方向连续多次变动时得到特性曲线不一致的程度</p><p>⑤分辨率：在测量方向内所能测量输入量的最小变化量△x</p><p>⑥漂移：在外界的干扰下，输出量发生与输入量无关的变化</p></li><li><p>应变效应：金属导体或者半导体在受外力作用时，会产生相应的应变，其阻值也随之发生变化 。</p></li><li><p>应变片式传感器——电桥</p><p>①直流电桥（单臂电桥、惠斯通电桥）：$K_{u} = U/4$</p><p>②半差动电桥(双臂电桥)：$K_{u} = U/2$</p><p>③全桥电路（全臂电桥）：$K_{u} = U$</p></li><li><p>变磁阻式(自感)传感器：</p><p>电感：在电路中电流发生变化时能产生电动势的性质成为电感，分为自感和互感</p><ul><li><strong>自感</strong>：当线圈中有电流通过时，线圈的周围就会产生磁场。当线圈中电流发生变化时，其周围的磁场也产生相应的变化，此变化的磁场可使线圈自身产生感应电动势。</li><li>互感：两个电感线圈相互靠近时，一个电感线圈的磁场变化将影响另一个电感线圈，这种影响就是互感。互感的大小取决于电感线圈的自感与两个电感线圈耦合的程度 。</li></ul><p>应用范畴：微位移</p><p>分类：</p><ul><li>变气隙式 &nbsp;&nbsp;工作原理：<font color="yellow"><strong>气隙厚度</strong></font>的改变，使得磁路中磁阻值变化，从而导致电路电感值变化</li><li>变截面式</li><li>螺管式</li></ul></li><li><p>电容式传感器：$c_0 = \frac{\epsilon_0\epsilon_rS}{d_0}$</p><p>分类：①变极距型②变面积型③变介质型（油箱测油位）</p><p>应用：手机指纹识别</p><p>ps:实验箱指纹识别模块使用的是光电式传感器</p></li><li><p>磁电式传感器-霍尔传感器</p><p>霍尔效应：置于磁场中的静止载流导体, 当它的电流方向与磁场方向不一致时, 载流导体上<font color="blue"><strong>垂直</strong></font>于电流和磁场方向产生电动势。该电势称霍尔电势。</p><ul><li>霍尔电势与控制电流和磁感应强度成正比</li><li>霍尔电势的灵敏度与霍尔常数RH正比而与霍尔片厚度成反比</li></ul><p>应用：微位移、测转速(汽车轮胎)、测电流、计数、开关等</p></li><li><p>压电式传感器</p><p>压电效应：某些电介质,当沿着一定方向对其施力而使它变形时,其内部就产生极化现象,同时在它的两个表面上便产生符号相反的电荷,当外力去掉后,其又重新恢复到不带电状态。</p><ul><li><p>Z为光轴，X为电轴，Y为机械轴</p></li><li><p>压电效应称为纵向压电效应，沿Y方向产生的为横向压电效应，沿Z轴不产生</p></li><li><p>侧压力时线性度不好，需要在力传递系统中加入预加力，称<font color="pink"><strong>预载</strong></font></p></li></ul></li><li><p>光电式传感器</p><p>光电效应：光的频率越高，其光子能量就越大。当具有一定能量的光子作用到某些物体上转化为该物体中一些电子的能量而产生电效应。</p><p>分类：</p><ul><li><p>外光电效应（光线照到某些物体上造成表面电子逸出的现象）</p></li><li><p>光电导效应、光生伏特效应(内光电效应) （物体受光照后，内部原子释放出电子不能逸出表面，使物体电阻率发生变化或产生光电动势的现象）</p></li><li><p>光电倍增管：对光电流放大以提高灵敏度,阳极最后收集到的电子数是阴极发射的$10^5～10^6$倍</p><p><img src="https://s2.ax1x.com/2019/05/07/EsX6VU.png" alt="EsX6VU.png"></p></li></ul><p>应用：亮度传感器、烟雾报警器、光电鼠标等</p></li><li><p>无线传感器</p><p>定义：是大量的静止或移动的传感器以<font color="green"><strong>自组织</strong></font>和<font color="green"><strong>多跳</strong></font>的方式构成的无线网络，目的是协作地<font color="red"><strong>采集、处理、传输</strong></font>网络覆盖地域内感知对象的检测信息，并报告用户。</p><p>传感器节点 -&gt; <strong>汇聚节点</strong> -&gt; 管理节点</p><p>网络节点组成：传感模块—计算模块—通信模块——存储模块</p><p>无线传感网：WSN(Wireless sensor network)</p><ul><li>电池供电，能量有限（耗能排序：发送&gt;接受&gt;空闲&gt;睡眠</li><li>短距离通讯（距离增加一倍，功耗增加三倍</li><li>节点生命周期</li><li>自适应网络</li></ul><p>路由的性质：</p><p><a href="https://imgchr.com/i/EsjKdU" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/05/07/EsjKdU.md.png" alt="EsjKdU.md.png"></a></p><p>路由策略分析：最大PA、最小能量消耗、最少跳转、最大最小PA节点</p><p>定向扩散路由：①兴趣扩散（洪泛方式）②梯度建立③加强路径</p><p>GPSR绕过路由空洞的步骤：    </p><ul><li>构造全网连接平面图</li><li>通过删边处理，变成可平面图（GG、RNG算法</li><li>通过右手法则，绕过路由空洞（每经过一个面，顺时针到的第一条边</li></ul><p>MAC协议：</p><p>分类：时分复用无竞争接入方式(分配型）、随机竞争接入方式（竞争型）、竞争与固定分配相结合的接入方式（混合型）</p><p>S-MAC协议：</p><p>优点：</p><ul><li>周期性的侦听/睡眠的低占空比方式</li><li>虚拟簇的调度方式</li><li>自适应流量的侦听机制：通信结束继续侦听一段时间</li><li>串音避免：RTS/CTS/DATA/ACK</li></ul><p>缺点：延迟受限于帧长度，不适合实时业务</p><p>分配性MAC协议：</p><ul><li><p>“隐藏终端”（Hidden Stations）：在通信领域，基站A向基站B发送信息，基站C未侦测到A也向B发送，故A和C同时将信号发送至B，引起信号冲突，最终导致发送至B的信号都丢失了。</p><p><a href="https://imgchr.com/i/EkzdaD" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/22/EkzdaD.png" alt="EkzdaD.png"></a></p></li><li><p>暴露终端是指在发送节点的覆盖范围内而在接收节点的覆盖范围外的节点，暴露终端因听到发送节点的发送而可能延迟发送。但是，它其实是在接收节点的通信范围之外，它的发送不会造成冲突。这就引入了不必要的延时。</p><p><a href="https://imgchr.com/i/EkzaVO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/22/EkzaVO.png" alt="EkzaVO.png"></a></p></li></ul></li><li><p>ZigBee</p><p>功能节点：协调者（COORDINATOR）、路由器（ROUTER）、终端设备（END DEVICE）</p><ul><li>协调者（老大）功能：发送网络信标、建立一个PAN、管理网络节点、存储网络节点信息、寻找节点对路由信息</li><li>路由器功能：允许其它设备加入网络、跳跃路由、辅助子设备供电</li><li>终端设备功能：传感节点的载体、轻载化程序设计</li></ul><p>网络拓扑结构：星型、网型、树形</p><p>模式：非信标模式（CSMA/CA）、信标模式（竞争和分配的混合性信道接入）</p><ul><li>CSMA/CA方式下通过三个参数的调节来实现冲突避免：退避次数（NB)、竞争窗口长度（CW)、退避指数（BE）</li></ul><p>信标、超帧及其结构：</p><ul><li><p>超帧包含活动部分和非活动部分，超帧以一个信标的开始为开始，信标定义超帧结构</p></li><li><p>CAP为自由竞争阶段、CFP为非竞争阶段、CFP内可以保证GTS（保证时隙）的传送</p></li><li><p>信标是子设备同步父设备的标记</p><p><a href="https://imgchr.com/i/EAEnSO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/04/22/EAEnSO.md.png" alt="EAEnSO.md.png"></a></p></li></ul><p>耗能：传感模块的功耗远高于射频模块的功耗，这是因为传感模块大多采用模拟电路进行感测，需要一直恒定的加载电流。</p></li></ol><p><br></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;物联网（IoT）：Internet of Things&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;物联网是具有自我&lt;font color=&quot;Red&quot;&gt;&lt;strong&gt;标示、感知和智能&lt;/strong&gt;&lt;/font&gt;的物理实体基于通信技术相互连接形成的网络，这些物理设备可以在&lt;font color=&quot;Red&quot;&gt;&lt;strong&gt;无需人工干预&lt;/strong&gt;&lt;/font&gt;的条件下实现&lt;font color=&quot;Red&quot;&gt;&lt;strong&gt;协同和互动&lt;/strong&gt;&lt;/font&gt;，为人们提供&lt;font color=&quot;Red&quot;&gt;&lt;strong&gt;智慧和集约的服务&lt;/strong&gt;&lt;/font&gt;，传感网是物联网的基础，是物联网的组成部分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;物联网三层体系结构：感知层、网络层和应用层&lt;/p&gt;
&lt;p&gt;感知层是物联网的皮肤和五官——识别物体，采集信息；&lt;/p&gt;
&lt;p&gt;网络层是物联网的神经中枢和大脑——信息传递和处理；&lt;/p&gt;
&lt;p&gt;应用层是物联网的“社会分工”——与行业需求结合，实现广泛智能化&lt;/p&gt;
    
    </summary>
    
      <category term="物联网概论" scheme="quincy.ink/categories/%E7%89%A9%E8%81%94%E7%BD%91%E6%A6%82%E8%AE%BA/"/>
    
    
      <category term="物联网概论" scheme="quincy.ink/tags/%E7%89%A9%E8%81%94%E7%BD%91%E6%A6%82%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>概率论与数理统计 学习笔记</title>
    <link href="quincy.ink/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>quincy.ink/概率论与数理统计-学习笔记.html</id>
    <published>2019-03-04T01:31:59.000Z</published>
    <updated>2019-06-02T23:37:47.909Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="第一章-随机事件及其概率"><a href="#第一章-随机事件及其概率" class="headerlink" title="第一章 随机事件及其概率"></a>第一章 随机事件及其概率</h3><h4 id="第一节-随机事件及其频率、概率的统计定义"><a href="#第一节-随机事件及其频率、概率的统计定义" class="headerlink" title="第一节 随机事件及其频率、概率的统计定义"></a>第一节 随机事件及其频率、概率的统计定义</h4><p>随机事件(偶然事件)：在试验的结果中，可能发生、也可能不发生的事件</p><p>随机事件的频率具有一定的稳定性  </p><p>随机事件的概率为频率的近似值 P(A)<script type="math/tex">\approx</script>f(A) = $\frac{m}{n}$</p><p>必然事件 P(U)=1</p><p>不可能事件 P(V)=0</p><a id="more"></a><h4 id="第二节-样本空间"><a href="#第二节-样本空间" class="headerlink" title="第二节 样本空间"></a>第二节 样本空间</h4><p>样本点：随机试验的每一个可能出现的且是最简单的不可再分的结果</p><p>样本空间：所有的样本点构成的集合（分可列个和不可列个）</p><p>任一随机事件A都是样本空间Ω的一个子集</p><h4 id="第三节-事件的关系及运算"><a href="#第三节-事件的关系及运算" class="headerlink" title="第三节 事件的关系及运算"></a>第三节 事件的关系及运算</h4><p>包含/包含于：$A \subset B$</p><p>和(并)：$A∪B$</p><p>积(交)：$A∩B 或 AB$</p><p>互斥(互不相容)：两个互不相容的和 $A+B$</p><p>对立(逆)    </p><p>完备事件组：n个事件至少有一个事件一定发生</p><p><br></p><p>交换律、结合律、分配律、德摩根律</p><h4 id="第四节-概率的古典定义"><a href="#第四节-概率的古典定义" class="headerlink" title="第四节 概率的古典定义"></a>第四节 概率的古典定义</h4><p>乘法定理：完成一件事需r步，第i步有$ m_ i $种方法，完成这件事总方法数 $ m_ 1m_ 2…m_ r $</p><p>加法定理：完成一件事有r类方法，第i类有$ m_ i $种方法，完成这件事总方法数 $ m_ 1+m_ 2+…+m_ r $</p><p>排列：$ A _ n ^m = \frac{n!}{(n-m)!} $</p><p>组合：$ C _ n ^m = \frac{A _ n ^m}{P_ m} =  \frac{n!}{(n-m)!m!}$</p><p>概率的古典定义：试验样本总共有$ n_Ω$ 个<font color="#FF0000">等可能</font>的基本事件，其中随机事件A包含$ n_A$个基本事件，($ n_A$&lt;=$ n_Ω$)</p><p>则 $P(A) =  \frac{n_A}{n_Ω}$</p><font color="blue">不放回依次抽样与一次抽样的一致性</font>  、<font color="blue">抽签次序无关性</font><h4 id="第五节-概率加法定理"><a href="#第五节-概率加法定理" class="headerlink" title="第五节 概率加法定理"></a>第五节 概率加法定理</h4><p>若随机事件A与B互斥，即$AB = \emptyset，则P(A+B)= P(A)+P(B)  \Rightarrow  P(A)+P(\overline{A})=1$</p><p>若A、B是任意的两个随机事件，则二者和事件的概率为 $P(A∪B)=P(A)+P(B)-P(AB)$</p><p>&ensp;&ensp; $\Rightarrow   P(A∪B∪C)=P(A)+P(B)+P(C)-P(AB)-P(AC)-P(BC)+P(ABC) $</p><h4 id="第六节-条件概率与乘法定理"><a href="#第六节-条件概率与乘法定理" class="headerlink" title="第六节 条件概率与乘法定理"></a>第六节 条件概率与乘法定理</h4><p>$P(B|A)=\frac{P(AB)}{P(A)}$</p><p>若$P(A_1A_2…A_{n-1})&gt;0,则 P(A_1A_2…A_{n})=P(A_1)P(A_2|A_1)P(A_3|A_1A_2)…P(A_n|A_1A_2…A_n-1)$</p><h4 id="第七节-全概率公式与贝叶斯公式"><a href="#第七节-全概率公式与贝叶斯公式" class="headerlink" title="第七节 全概率公式与贝叶斯公式"></a>第七节 全概率公式与贝叶斯公式</h4><p>&ensp;&ensp;先验，由因溯果</p><script type="math/tex; mode=display">P(A) = \sum_{i=1}^nP(B_i)P(A|B_i)</script><p> &ensp;&ensp;后验，由果溯因</p><script type="math/tex; mode=display">P(B_i|A) = \frac{P(AB_i)}{P(A)} = \frac{P(B_i)P(A|B_i)}{\sum_{i=1}^nP(B_i)P(A|B_i)},i=1,2,...,n</script><h4 id="第八节-随机事件的独立性"><a href="#第八节-随机事件的独立性" class="headerlink" title="第八节 随机事件的独立性"></a>第八节 随机事件的独立性</h4><p>若两事件A与B满足P(AB) = P(A)P(B)，则称事件A与B相互独立</p><p>&ensp;&ensp;性质1：不可能事件及必然事件与任意的随机事件相互独立</p><p>&ensp;&ensp;性质2：A与B相互独立，则A与$\overline{B},\overline{A}与B,\overline{A}与\overline{A}$也相互独立&ensp;&ensp;（相互对称性）</p><h4 id="第九节-贝努力概型"><a href="#第九节-贝努力概型" class="headerlink" title="第九节 贝努力概型"></a>第九节 贝努力概型</h4><p>事件A恰好发生k次的概率：$P_n(k) = C_n^kp^kq^{n-k},k=0,1,2,…,n$</p><p>$\sum_{k=0}^nP_n(k) = \sum_{k=0}^nC_n^kp^kq^{n-k} = (p+q)^n = 1$</p><p>事件A发生次数介于$m_1$与$m_2$之间：$P_n(m_1&lt;=k&lt;=m_2) = \sum_{k=m1}^{m2}P_n(k)$</p><p>事件A至少发生r次：$P(k&gt;=r) = \sum_{k=r}^nP_n(k) = 1 - \sum_{k=0}^{r-1}P_n(k)$</p><h4 id="第十节-概率论的公理化体系"><a href="#第十节-概率论的公理化体系" class="headerlink" title="第十节 概率论的公理化体系"></a>第十节 概率论的公理化体系</h4><p>非负性：P(A)&gt;=0;</p><p>规范性：P(Ω)=1;</p><p>可列可加性(可数可加性)：$A_1,A_2,…$ 两两互不相容，则$P(\sum_{i=1}^\infty A_i) = \sum_{i=1}^\infty P(A_i)$</p><p><br></p><h3 id="第二章-随机变量及其分布"><a href="#第二章-随机变量及其分布" class="headerlink" title="第二章 随机变量及其分布"></a>第二章 随机变量及其分布</h3><h4 id="第一节-随机变量的概念"><a href="#第一节-随机变量的概念" class="headerlink" title="第一节 随机变量的概念"></a>第一节 随机变量的概念</h4><p>设Ω为随机变量的样本空间，如果对每一个样本点$\omega \in Ω$，均有唯一确定的实数X($\omega$)与之对应，即存在一个定义于Ω的单值实函数X=X($\omega$)，则称X=X($\omega$)为样本空间Ω上的随机变量</p><h4 id="第二节-离散型随机变量的概率分布"><a href="#第二节-离散型随机变量的概率分布" class="headerlink" title="第二节 离散型随机变量的概率分布"></a>第二节 离散型随机变量的概率分布</h4><p>性质：</p><p>①$p_k&gt;=0 (k=1,2,..) $</p><p>②$\sum_{k=1}^{\infty}p_k = 1$</p><h4 id="第三节-几种常用的离散型随机变量的分布"><a href="#第三节-几种常用的离散型随机变量的分布" class="headerlink" title="第三节 几种常用的离散型随机变量的分布"></a>第三节 几种常用的离散型随机变量的分布</h4><p>“0-1”分布：$P(X=1) = p，P(X=0) = q（0&lt;p&lt;1，p+q=1）$</p><p>超几何分布：$P(X=m) = \frac{C_M^mC_{N-M}^{n-m}}{C_N^n} （n&lt;=N,M&lt;=N）记作X～H(n,M,N)$</p><p>二项分布：$P(X=k) = C_n^kp^kq^{n-k} （k=0,1,2,…,n） 记作X ～B(n,p)$</p><p>&ensp;&ensp;二项式分布的最可能取值( P(X=k)取得最大值的k )：</p><p>&ensp;&ensp;①若(n+1)p不是整数，则其整数部分[(n+1)p]即为所求；</p><p>&ensp;&ensp;②若(n+1)p=m是整数，则m和m-1即为所求</p><p>泊松分布：$P(X=k) = P_{\lambda}(k) = \frac{\lambda^k}{k!}e^{-\lambda} （k=0,1,2,…）记作X～P(\lambda)$</p><p>几何分布：$P(X=k)=q^{k-1}p（k=1,2,…） 记作X～G(p)$</p><h4 id="第四节-随机变量的分布函数"><a href="#第四节-随机变量的分布函数" class="headerlink" title="第四节 随机变量的分布函数"></a>第四节 随机变量的分布函数</h4><p>$F(x) = P(X&lt;=x)$</p><p>性质：</p><p>$F(x) 单调不减，若x_1&lt;x_2,则F(x_1)&lt;=F(x_2)$</p><p>$P(x_1&lt;X&lt;=x_2) = F(x_2)-F(x_1)$离散型随机变量只能用</p><p>$P(x_1&lt;=X&lt;=x_2) =P(x_1&lt;X&lt;=x_2)=P(x_1&lt;=X&lt;x_2)=P(x_1&lt;X&lt;x_2) =F(x_2)-F(x_1)$连续性随机变量都适用</p><p>离散型随机变量的F(x)含跳跃间断点；连续性随机变量F(x)连续且位于y=0与y=1之间</p><h4 id="第五节-连续性随机变量的概率密度"><a href="#第五节-连续性随机变量的概率密度" class="headerlink" title="第五节 连续性随机变量的概率密度"></a>第五节 连续性随机变量的概率密度</h4><ol><li><p>分布函数F(x)与概率密度函数f(x)的关系：</p><ul><li>$f(x) = F^{′}(x) $</li><li>$F(x)=\int_{-\infty}^xf(t)dt$</li></ul></li><li><p>性质：</p><ul><li>$因为F(-\infty)=0,F(+\infty)=1,所以有\int_{-\infty}^{+\infty}f(x)dx = 1$</li><li>$P(x_1&lt;X&lt;=x_2)=F(x_2)-F(x_1)=\int_{x_1}^{x_2}f(x)dx$</li></ul></li></ol><h4 id="第六节-几种常用的连续随机变量的分布"><a href="#第六节-几种常用的连续随机变量的分布" class="headerlink" title="第六节 几种常用的连续随机变量的分布"></a>第六节 几种常用的连续随机变量的分布</h4><p>均匀分布 X~U(a,b)</p><ul><li><script type="math/tex; mode=display">f(x)=\begin{cases} \frac{1}{b-a},&\text{a<x<b}\\ 0,&\text{其他} \end{cases}</script></li><li><script type="math/tex; mode=display">F(x)=\begin{cases}0,&\text{x<=a}\\ \frac{x-a}{b-a},&\text{a<x<b}\\ 1,&\text{x>=b} \end{cases}</script></li></ul><p>指数分布 X~e($\lambda$)</p><ul><li><script type="math/tex; mode=display">f(x)=\begin{cases}\lambda e^{-\lambda x},&\text{x>0}\\ 0,&\text{其他} \end{cases}</script></li><li><script type="math/tex; mode=display">F(x)=\begin{cases}1-e^{-\lambda x},&\text{x>0}\\ 0,&\text{x<=0} \end{cases}</script></li></ul><p>正态分布 X~N($\mu,\sigma^2$)</p><ul><li><script type="math/tex; mode=display">f(x)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^{2}}{2\sigma^2}},x\in(-\infty,+\infty)</script></li><li><script type="math/tex; mode=display">F(x)=\Phi(\frac{x-\mu}{\sigma})</script></li></ul><h4 id="第七节-随机变量函数的分布"><a href="#第七节-随机变量函数的分布" class="headerlink" title="第七节 随机变量函数的分布"></a>第七节 随机变量函数的分布</h4><p><br></p><h3 id="第三章-多维随机变量及其分布"><a href="#第三章-多维随机变量及其分布" class="headerlink" title="第三章 多维随机变量及其分布"></a>第三章 多维随机变量及其分布</h3><h4 id="第一节-二维随机变量的联合分布"><a href="#第一节-二维随机变量的联合分布" class="headerlink" title="第一节 二维随机变量的联合分布"></a>第一节 二维随机变量的联合分布</h4><ul><li><p>$P(X=x_i,Y=y_j)=P_{ij}(i,j=1,2,…)$</p></li><li><p>$F(x,y)=P(X&lt;=x,Y&lt;=y)=P[\{X&lt;=x\}∩\{Y&lt;=y\}]$</p></li><li>二维均匀分布</li></ul><script type="math/tex; mode=display">f(x)=\begin{cases}\frac{1}{A},&\text{(x,y)}\in\text{D} \\ 0,&\text{(x,y)}\notin\text{D} \end{cases}</script><ul><li>二维正态分布$(X,Y)～N(\mu_1,\sigma_1^2;\mu_2,\sigma_2^2;\rho)$<script type="math/tex; mode=display">f(x,y)=\frac{1}{2\pi\sigma_1\sigma_2\sqrt{1-\rho^2}}e^{-\frac{1}{2(1-\rho^2)}[\frac{(x-\mu_1)^2}{\sigma_1^2}-\frac{2\rho(x-\mu_1)(y-\mu_2)}{\sigma_1\sigma_2}+\frac{(y-\mu_2)^2}{\sigma_2^2}]}</script></li></ul><h4 id="第二节-二维随机变量的边缘分布"><a href="#第二节-二维随机变量的边缘分布" class="headerlink" title="第二节 二维随机变量的边缘分布"></a>第二节 二维随机变量的边缘分布</h4><ol><li><p>离散型：固定一行或一列累加。</p></li><li><p>连续性</p><p> $ f_X(x)=(F_X(x))^′=\int_{-\infty}^{+\infty}f(x,y)dy$</p><p> $ f_Y(y)=(F_Y(y))^′=\int_{-\infty}^{+\infty}f(x,y)dx$</p><p>若随机变量(X,Y)服从二维正态分布$N(\mu_1,\sigma_1^2;\mu_2,\sigma_2^2;\rho)$，则X～$N(\mu_1,\sigma_1^2)$,$Y～N(\mu_2,\sigma_2^2)$</p></li></ol><h4 id="第三节-二维随机变量的条件分布"><a href="#第三节-二维随机变量的条件分布" class="headerlink" title="第三节 二维随机变量的条件分布"></a>第三节 二维随机变量的条件分布</h4><ol><li><p>离散型</p><p>$P_{X|Y}(x_i|y_j)=P(X=x_i|Y=y_j)=\frac{P(X=x_i,Y=y_j)}{P(Y=y_j)}=\frac{P_{ij}}{P_{·j}},(i=1,2,…)$</p></li><li><p>连续性</p><p>$F_{X|Y}(x|y)=\frac{\int_{-\infty}^xf(x,y)dx}{f_Y(y)}$</p><p>$f_{X|Y}(x|y)=\frac{f(x,y)}{f_Y(y)}$</p></li></ol><h4 id="第四节-随机变量的独立性"><a href="#第四节-随机变量的独立性" class="headerlink" title="第四节 随机变量的独立性"></a>第四节 随机变量的独立性</h4><p>充分必要条件：</p><p>$P(X=x_i,Y=y_j)=P(X=x_i)P(Y=y_j)$</p><p>$F(x,y)=F_X(x)F_Y(y)$</p><p>$f(x,y)=f_X(x)f_Y(y)$</p><p><br></p><h3 id="第四章-随机变量的数字特征"><a href="#第四章-随机变量的数字特征" class="headerlink" title="第四章 随机变量的数字特征"></a>第四章 随机变量的数字特征</h3><p><br></p><h3 id="第五章-大数定律与中心极限定理"><a href="#第五章-大数定律与中心极限定理" class="headerlink" title="第五章 大数定律与中心极限定理"></a>第五章 大数定律与中心极限定理</h3><p><br></p><h3 id="第六章-数理统计的基本概念与抽样分析"><a href="#第六章-数理统计的基本概念与抽样分析" class="headerlink" title="第六章 数理统计的基本概念与抽样分析"></a>第六章 数理统计的基本概念与抽样分析</h3><p><br></p><h3 id="第七章-参数估计"><a href="#第七章-参数估计" class="headerlink" title="第七章 参数估计"></a>第七章 参数估计</h3><p><br></p><h3 id="第八章-假设验证"><a href="#第八章-假设验证" class="headerlink" title="第八章 假设验证"></a>第八章 假设验证</h3><p><br></p><p><br></p><p>待更…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;第一章-随机事件及其概率&quot;&gt;&lt;a href=&quot;#第一章-随机事件及其概率&quot; class=&quot;headerlink&quot; title=&quot;第一章 随机事件及其概率&quot;&gt;&lt;/a&gt;第一章 随机事件及其概率&lt;/h3&gt;&lt;h4 id=&quot;第一节-随机事件及其频率、概率的统计定义&quot;&gt;&lt;a href=&quot;#第一节-随机事件及其频率、概率的统计定义&quot; class=&quot;headerlink&quot; title=&quot;第一节 随机事件及其频率、概率的统计定义&quot;&gt;&lt;/a&gt;第一节 随机事件及其频率、概率的统计定义&lt;/h4&gt;&lt;p&gt;随机事件(偶然事件)：在试验的结果中，可能发生、也可能不发生的事件&lt;/p&gt;
&lt;p&gt;随机事件的频率具有一定的稳定性  &lt;/p&gt;
&lt;p&gt;随机事件的概率为频率的近似值 P(A)&lt;script type=&quot;math/tex&quot;&gt;\approx&lt;/script&gt;f(A) = $\frac{m}{n}$&lt;/p&gt;
&lt;p&gt;必然事件 P(U)=1&lt;/p&gt;
&lt;p&gt;不可能事件 P(V)=0&lt;/p&gt;
    
    </summary>
    
      <category term="概率论与数理统计" scheme="quincy.ink/categories/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
    
      <category term="概率论与数理统计" scheme="quincy.ink/tags/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛-41</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B-41.html"/>
    <id>quincy.ink/牛客练习赛-41.html</id>
    <published>2019-03-03T02:33:31.000Z</published>
    <updated>2019-03-03T05:27:21.099Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/373#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/373#question</a></p><blockquote><p><strong>A 翻硬币问题</strong></p></blockquote><p><strong>题意：</strong>A和B玩游戏，A先手，要将n个正面硬币翻转为反面且每次只能翻转m个，B有一次可以在A翻转后将一枚硬币翻转的机会，给出n,m问A是否能将所有硬币翻转<a id="more"></a></p><p><strong>思路：</strong> 简单签到题，容易想到：</p><p>​        当n&lt;m时，A翻不了</p><p>​        当n==m时，A可以一下就翻完</p><p>​        当n&gt;m时，无论A是否刚好翻完，B都可以打乱</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">if</span>(n==m) <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">else</span>     <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>B 666RGP</strong></p></blockquote><p><strong>题意：</strong>给出n个数(n&lt;=300,-666&lt;=ai&lt;=666)，分数开始初值为0，对于第i个数有两种操作，一是分数+a[i],二是分数*(-1)，问经过n个数后有多少种方法分数变为-666，且中间分数不能出现666，答案对1e8+7取模</p><p><strong>思路：</strong>简单计数dp</p><p>设dp[i] [j]表示，经过第i个数后分数为j的答案，那么有dp[i] [j] = dp[i-1] [j - a[i]] + dp[i-1] [-j]</p><p>注意过滤掉j==666的情况</p><p>因为j最大会有2*300*666 这么大，如果开dp[300] [2*300*666] 肯定空间不够</p><p>考虑转移方程只和i 和 i-1有关，可以用滚动数组形式优化</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxv = <span class="number">700</span>*<span class="number">300</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e8</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">2</span>][maxv*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">305</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    dp[<span class="number">0</span>][maxv]=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">-666</span>*n;j&lt;=<span class="number">666</span>*n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">666</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i&amp;<span class="number">1</span>][j+maxv]=(dp[(i<span class="number">-1</span>)&amp;<span class="number">1</span>][-j+maxv]+dp[(i<span class="number">-1</span>)&amp;<span class="number">1</span>][j-a[i]+maxv])%P;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n&amp;<span class="number">1</span>][<span class="number">-666</span>+maxv]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>C 抓捕盗窃犯</strong></p></blockquote><p><strong>题意：</strong>在n点中，第i个点有ai个人，再给出下一时刻第i个点的所有人转移到vi点，问在m个地方建立哨卡（可以一直监控当地经过的人），最多可以监视到多少人</p><p><strong>思路：</strong></p><p>n个点，每个点有一条有向出边</p><p>容易想到这些点将组成一些块</p><p>且每个块内都有一个环</p><p>这样，一个块的所有地点的人都会经过环</p><p>那么用并查集整合n个地点人口，再取前m大就行</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn];</span><br><span class="line">ll a[maxn],b[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==x?x:f[x]=get(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=i;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> to;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;to);</span><br><span class="line">        <span class="keyword">int</span> x=get(i),y=get(to);</span><br><span class="line">        <span class="keyword">if</span>(x!=y)&#123;</span><br><span class="line">            f[x]=y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> f=get(i);</span><br><span class="line">        b[f]+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;n-m;i--)&#123;</span><br><span class="line">        ans+=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>D 最小相似度</strong></p></blockquote><p><strong>题意：</strong>给出n个m长的二进制01串，问构造一个m长的01串使得这个串和这n个串对应位相同的数量最大的最小值</p><p><strong>思路：</strong>将n个串都作为起点进行bfs，搜索完所有2^m内的数，dp[i]表示从某个起点到i需要翻转的位数，既有多少位与原先某个串不相同，m-max(dp[i]) 即为最小相同的位数</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">3e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1</span>&lt;&lt;<span class="number">20</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">25</span>];</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*((<span class="number">1</span>&lt;&lt;m)+<span class="number">5</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            tmp+=(<span class="number">1</span>&lt;&lt;j)*(s[j]-<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[tmp]=<span class="number">0</span>;</span><br><span class="line">        q.push(tmp);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[u^(<span class="number">1</span>&lt;&lt;j)]!=<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[u^(<span class="number">1</span>&lt;&lt;j)]=dp[u]+<span class="number">1</span>;</span><br><span class="line">            q.push(u^(<span class="number">1</span>&lt;&lt;j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    bfs();</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++) ans=max(ans,dp[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,m-ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>E 球的体积并</strong></p></blockquote><p><strong>题意：</strong>给出两个球的球心坐标和半径，求两球相交体积</p><p><strong>思路：</strong>球冠体积公式(h为球冠高，r为球半径,d为球心距)</p><script type="math/tex; mode=display">V=PI*h(3a^2+h^2)/6=PI*h^2(3r-h)/3</script><script type="math/tex; mode=display">h=r-(ra^2-rb^2+d^2)/2d</script><p>注意外离、外切、内含的几种情况需特判</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y,z;</span><br><span class="line">    point() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    point(<span class="keyword">double</span> a, <span class="keyword">double</span> b,<span class="keyword">double</span> c) &#123;</span><br><span class="line">        x = a;</span><br><span class="line">        y = b;</span><br><span class="line">        z = c;</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> -(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;     <span class="comment">//返回减去后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x - b.x, y - b.y,z-b.z);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> +(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;     <span class="comment">//返回加上后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x + b.x, y + b.y,z+b.z);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> *(<span class="keyword">const</span> <span class="keyword">double</span> &amp;k)<span class="keyword">const</span> &#123;    <span class="comment">//返回相乘后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x * k, y * k,z*k);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> /(<span class="keyword">const</span> <span class="keyword">double</span> &amp;k)<span class="keyword">const</span> &#123;    <span class="comment">//返回相除后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x / k, y / k,z/k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> *(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;    <span class="comment">//点乘</span></span><br><span class="line">        <span class="keyword">return</span> x*b.x + y*b.y+z*b.z;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; point;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist</span><span class="params">(point p1, point p2)</span> </span>&#123;       <span class="comment">//返回平面上两点距离</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((p1 - p2)*(p1 - p2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sphere</span> &#123;</span><span class="comment">//球</span></span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    point centre;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">v</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4.0</span>/<span class="number">3</span>*PI*r*r*r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; sphere;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">(sphere a, sphere b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> d = dist(a.centre, b.centre);<span class="comment">//球心距</span></span><br><span class="line">    <span class="comment">//double t = (d*d + a.r*a.r - b.r*b.r) / (2.0 * d);//</span></span><br><span class="line">    <span class="comment">//double h = sqrt((a.r*a.r) - (t*t)) * 2;//h1=h2，球冠的高</span></span><br><span class="line">    <span class="comment">//double angle_a = 2 * acos((a.r*a.r + d*d - b.r*b.r) / (2.0 * a.r*d));  //余弦公式计算r1对应圆心角，弧度</span></span><br><span class="line">    <span class="comment">//double angle_b = 2 * acos((b.r*b.r + d*d - a.r*a.r) / (2.0 * b.r*d));  //余弦公式计算r2对应圆心角，弧度</span></span><br><span class="line">    <span class="keyword">if</span>(d-a.r-b.r&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,a.v()+b.v());</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d+a.r&lt;b.r||d+b.r&lt;a.r)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,max(a.v(),b.v()));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> l1 = (a.r*a.r - b.r*b.r + d*d) / (<span class="number">2</span>*d);</span><br><span class="line">    <span class="keyword">double</span> l2 = (b.r*b.r - a.r*a.r + d*d) / (<span class="number">2</span>*d);</span><br><span class="line">    <span class="keyword">double</span> h1 = a.r - l1, h2 = b.r - l2;<span class="comment">//分别为两个球缺的高度</span></span><br><span class="line">    <span class="keyword">double</span> v1 = PI*h1*h1*(a.r - h1 / <span class="number">3</span>);<span class="comment">//相交部分r1圆所对应的球缺部分体积</span></span><br><span class="line">    <span class="keyword">double</span> v2 = PI*h2*h2*(b.r - h2 / <span class="number">3</span>);<span class="comment">//相交部分r2圆所对应的球缺部分体积</span></span><br><span class="line">    <span class="keyword">double</span> v = v1 + v2;<span class="comment">//相交部分体积</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,a.v()+b.v()-v);</span><br><span class="line">    <span class="comment">//double s1 = PI*a.r*x1;  //r1对应球冠表面积</span></span><br><span class="line">    <span class="comment">//double s2 = PI*a.r*x2;  //r2对应球冠表面积</span></span><br><span class="line">    <span class="comment">//double s = 4 * PI*(a.r*a.r + b.r*b.r) - s1 - s2;//剩余部分表面积</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sphere a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;a.centre.x,&amp;a.centre.y,&amp;a.centre.z,&amp;a.r);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;b.centre.x,&amp;b.centre.y,&amp;b.centre.z,&amp;b.r);</span><br><span class="line">    Solve(a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>F 简单数学题</strong></p></blockquote><p>数学弃…</p><p><br></p><p>岑巨出的题，难度适中，B题dp因为没注意要从dp[0] [maxv]开始初始化debug了很久</p><p>C题想到了并查集竟然不想写</p><p>E题内含的条件写错了，一直以为公式错了QAQ</p><p>还是大意了啊</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/373#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/373#question&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A 翻硬币问题&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;A和B玩游戏，A先手，要将n个正面硬币翻转为反面且每次只能翻转m个，B有一次可以在A翻转后将一枚硬币翻转的机会，给出n,m问A是否能将所有硬币翻转
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="数学" scheme="quincy.ink/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="bfs" scheme="quincy.ink/tags/bfs/"/>
    
      <category term="dp" scheme="quincy.ink/tags/dp/"/>
    
      <category term="并查集" scheme="quincy.ink/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>牛客OI周赛7-普及组</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2OI%E5%91%A8%E8%B5%9B7-%E6%99%AE%E5%8F%8A%E7%BB%84.html"/>
    <id>quincy.ink/牛客OI周赛7-普及组.html</id>
    <published>2019-02-24T08:16:20.000Z</published>
    <updated>2019-02-24T08:56:54.228Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/372#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/372#question</a></p><blockquote><p><strong>A 救救猫咪</strong></p></blockquote><p> 暴力</p><blockquote><p><strong>B 救救兔子</strong></p></blockquote><p><strong>题意：</strong>给出n长数组，m个询问，每次询问给出一个x，要求数组中与x差距最小的数(如果差距相等，输出较小的那个)<a id="more"></a></p><p><strong>思路：</strong></p><p>二分，原数组排序后用upper_lowbound() 找出第一个比x大元素的位置，在分别比较当前位置和当前位置-1的数与x的差距，注意比第一个数小和最后一个数大的时候需特判</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=a[n<span class="number">-1</span>])    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[n<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x&lt;=a[<span class="number">0</span>]) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> pos=upper_bound(a,a+n,x)-a;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(a[pos<span class="number">-1</span>]-x) &lt;= <span class="built_in">abs</span>(a[pos]-x)) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[pos<span class="number">-1</span>]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[pos]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>C 救救企鹅</strong></p></blockquote><p><strong>题意:</strong>  给出字符串s,a,b(长度&lt;=1e6),要求输出将s中所有a替换为b后的字符串</p><p><strong>思路:</strong>  kmp或hash求出s中与a匹配的位置,再替换一下即可</p><p>比赛的时候没有注意到a,b串的长度可以不相等 只过了50%qwq</p><p>赛后发现用Java或Python都可以直接秒这题tql</p><p><strong>代码:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">int</span> lens,lena,lenb;</span><br><span class="line">ull base=<span class="number">131</span>;</span><br><span class="line">ull p[maxn],hs[maxn];</span><br><span class="line"><span class="function">ull <span class="title">geth</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ull)hs[r]-hs[l<span class="number">-1</span>]*p[r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;pos;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,s+<span class="number">1</span>,a+<span class="number">1</span>,b+<span class="number">1</span>);</span><br><span class="line">    lens=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">    lena=lenb=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">    ull tt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lena;i++) tt=tt*base+(ull)a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++) hs[i]=hs[i<span class="number">-1</span>]*base+(ull)s[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens-lena+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        ull ss=geth(i,i+lena<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span>(ss==tt)&#123;</span><br><span class="line">            pos.push_back(i);</span><br><span class="line">            i+=lena<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;pos.size();i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(k!=pos[i])&#123;</span><br><span class="line">            <span class="built_in">putchar</span>(s[k]);</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>,b+<span class="number">1</span>);</span><br><span class="line">        k+=lena;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(k&lt;=lens)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(s[k]);</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>D 数糖纸</strong></p></blockquote><p><strong>题意:</strong>  给出长度为n的数组(maxn=1e6),要求不含相同元素的最长连续区间长度</p><p><strong>思路:</strong> </p><ol><li><p>双指针(l,r)移动表示[l,r]内没有重复的元素,用个set记录当前区间已经出现了的数,如果枚举到一个没有出现的数,则加入set,++r,否则一直删除左端已经出现过的元素直到重复元素被删除</p></li><li><p>上面可以稍微优化一下,因为 Ai 最大1e9,我们先将原数组离散化,再用一个vis[] 记录Ai 是否出现过</p></li></ol><p><strong>代码1:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>,l=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">    <span class="keyword">while</span>(r&lt;=n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.find(a[r])==s.end())&#123;</span><br><span class="line">            s.insert(a[r]);</span><br><span class="line">            ans=max(ans,r-l+<span class="number">1</span>);</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            s.erase(a[l]);</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>代码2:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn],pre[maxn],vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> m=unique(b+<span class="number">1</span>,b+<span class="number">1</span>+n)-b<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        a[i]=lower_bound(b+<span class="number">1</span>,b+<span class="number">1</span>+n,a[i])-b<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>,l=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[a[i]])&#123;</span><br><span class="line">            vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">while</span>(a[l]!=a[i])&#123;</span><br><span class="line">                vis[a[l]]=<span class="number">0</span>;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            l++;</span><br><span class="line">            vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=max(ans,i-l+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><p>一场比较简单的比赛,一点小粗心kmp就挂了</p><p>第一次在高铁上写博客,刺激~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/372#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/372#question&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A 救救猫咪&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 暴力&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;B 救救兔子&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;给出n长数组，m个询问，每次询问给出一个x，要求数组中与x差距最小的数(如果差距相等，输出较小的那个)
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="二分" scheme="quincy.ink/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="字符串hash" scheme="quincy.ink/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2hash/"/>
    
      <category term="暴力" scheme="quincy.ink/tags/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="kmp" scheme="quincy.ink/tags/kmp/"/>
    
      <category term="STL" scheme="quincy.ink/tags/STL/"/>
    
      <category term="离散化" scheme="quincy.ink/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>EOJ Monthly 2019.2</title>
    <link href="quincy.ink/EOJ-Monthly-2019-2.html"/>
    <id>quincy.ink/EOJ-Monthly-2019-2.html</id>
    <published>2019-02-23T06:03:29.000Z</published>
    <updated>2019-03-02T01:43:05.072Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://acm.ecnu.edu.cn/contest/140/" target="_blank" rel="noopener">https://acm.ecnu.edu.cn/contest/140/</a></p><p>A,B,C,E To be continue…</p><p><br></p><blockquote><p><strong>D 进制转换</strong></p></blockquote><p><strong>题意：</strong>求[l,r]中所有数的k进制末尾恰好有m个零的数有多少个<a id="more"></a></p><p><strong>思路：</strong></p><p>x在k进制下末尾恰好有m个零说明x%(k^m)恒等于0，而x%(k^(m+1))不恒等于0，而x%(k^m)==0的情况包含了x%(k^(m+1))==0的情况，所以由容斥定理有[1,x]中满足题意的数有 x/(k^m) - x/(k^(m+1)) 个</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(ll k,ll m,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        x/=k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll l,r,k,m;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&amp;l,&amp;r,&amp;k,&amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,calc(k,m,r)-calc(k,m+<span class="number">1</span>,r)-calc(k,m,l<span class="number">-1</span>)+calc(k,m+<span class="number">1</span>,l<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>F 方差</strong></p></blockquote><p><strong>题意：</strong> 在n个数中选m个数，使得这m个数的方差*(m^2)最小<!--more--></p><p><strong>思路：</strong></p><p>首先想到要使方差越小，则要这m个数与平均数的差距越小，所以我们可以先排序再尺取m长;</p><p>不难发现将方差公式乘以m^2后可以化简得到 </p><script type="math/tex; mode=display">m(a_1^2+a_2^2+⋯+a_m^2) − (a_1+a_2+⋯+a_m)^2</script><p>（MathJax真好用，小声哔哔</p><p>然后维护一个前缀和与一个前缀平方和即可</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line">ll sum1[maxn],sum2[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        sum1[i]=sum1[i<span class="number">-1</span>]+a[i];</span><br><span class="line">        sum2[i]=sum2[i<span class="number">-1</span>]+a[i]*a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&lt;=n;i++)&#123;</span><br><span class="line">        ll tmp=m*(sum2[i]-sum2[i-m])-(sum1[i]-sum1[i-m])*(sum1[i]-sum1[i-m]);</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">-1</span>||ans&gt;tmp) ans=tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://acm.ecnu.edu.cn/contest/140/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://acm.ecnu.edu.cn/contest/140/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A,B,C,E To be continue…&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;D 进制转换&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;求[l,r]中所有数的k进制末尾恰好有m个零的数有多少个
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="数学" scheme="quincy.ink/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>牛客OI周赛7-提高组</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2OI%E5%91%A8%E8%B5%9B7-%E6%8F%90%E9%AB%98%E7%BB%84.html"/>
    <id>quincy.ink/牛客OI周赛7-提高组.html</id>
    <published>2019-02-23T01:49:50.000Z</published>
    <updated>2019-03-03T11:25:52.633Z</updated>
    
    <content type="html"><![CDATA[<p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/371#question" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/371#question</a></p><blockquote><p><strong>A  小睿睿的等式</strong></p></blockquote><p><strong>题意：</strong>有n根火柴棒，能摆成形如“A+B=n”的等式且使用的火柴棒数也恰好等于n/k的等式有多少种(B+A=n与A+B=n看作一种,“=”与“+”分别需要使用2根火柴棒,maxn=5e7)  <a id="more"></a></p><p><img src="https://uploadfiles.nowcoder.com/images/20190220/309900_1550640194686_6C69625EB40698CDC89FA30046FEB74A" alt="img"></p><p><strong>思路：</strong>直接暴力拆分每组A+B写的挫会超时，比赛时没注意给出的空间很大(512MB)，先将所有5e7以内数所需火柴数打表即可</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">5e7</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    num[<span class="number">0</span>]=<span class="number">6</span>;</span><br><span class="line">    num[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">    num[<span class="number">2</span>]=<span class="number">5</span>;</span><br><span class="line">    num[<span class="number">3</span>]=<span class="number">5</span>;</span><br><span class="line">    num[<span class="number">4</span>]=<span class="number">4</span>;</span><br><span class="line">    num[<span class="number">5</span>]=<span class="number">5</span>;</span><br><span class="line">    num[<span class="number">6</span>]=<span class="number">6</span>;</span><br><span class="line">    num[<span class="number">7</span>]=<span class="number">3</span>;</span><br><span class="line">    num[<span class="number">8</span>]=<span class="number">7</span>;</span><br><span class="line">    num[<span class="number">9</span>]=<span class="number">6</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        num[i]=num[i/<span class="number">10</span>]+num[i%<span class="number">10</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> kk=n/k;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,x,y,z=num[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>; a&lt;=n/<span class="number">2</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">int</span> b=n-a;</span><br><span class="line">        x=num[a];</span><br><span class="line">        y=num[b];</span><br><span class="line">        <span class="keyword">if</span>(x+y+z+<span class="number">4</span>==kk)</span><br><span class="line">            ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>B  小睿睿的询问</strong></p></blockquote><p><strong>题意：</strong>给出随机生成一个n长数组的函数和生成区间查询L，R的函数，要求所有L，R区间生成数组中val[i]最大且较小下标异或值（maxn=1e5，maxm=5e7)</p><p><strong>思路：</strong>最开始写的线段树（O(mlogn)），因为是随机数据没想到过了时间是全场最久的(4632/5000 ms),后来知道可以用ST表写，但自己写的挫，加了个二分查对应下标也用了2900+ms(O(nlognlogn))，再后来可以在ST表处直接用个pair，val[i]和i对应,每次查询O(1)，总体复杂度O(nlogn+m)</p><p><strong>代码：</strong></p><p>线段树版：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> val[maxn],Max[maxn&lt;&lt;<span class="number">2</span>],idx[maxn&lt;&lt;<span class="number">2</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">    Max[o]=max(Max[o&lt;&lt;<span class="number">1</span>],Max[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span>(Max[o&lt;&lt;<span class="number">1</span>] &gt;= Max[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]) idx[o]=idx[o&lt;&lt;<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">else</span>                         idx[o]=idx[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        Max[o]=val[l];</span><br><span class="line">        idx[o]=l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(lson);</span><br><span class="line">    build(rson);</span><br><span class="line">    push_up(l,r,o);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">        <span class="keyword">return</span> idx[o];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid&amp;&amp;R&gt;mid)&#123;</span><br><span class="line">        <span class="keyword">int</span> i=query(L,R,lson);</span><br><span class="line">        <span class="keyword">int</span> j=query(L,R,rson);</span><br><span class="line">        <span class="keyword">if</span>(val[i]&gt;=val[j]) <span class="keyword">return</span> i;</span><br><span class="line">        <span class="keyword">else</span>               <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(L&lt;=mid)&#123;</span><br><span class="line">        <span class="keyword">return</span> query(L,R,lson);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(R&gt;mid)&#123;</span><br><span class="line">        <span class="keyword">return</span> query(L,R,rson);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x = seed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        val[i]=x%<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> lastans=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_ask</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> seedx,<span class="keyword">int</span> seedy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x=seedx,y=seedy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        y ^= y &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> L=(x^lastans)%n+<span class="number">1</span>,R=(y^lastans)%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (L&gt;R) swap(L,R);</span><br><span class="line">        lastans=query(L,R,<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        ans^=lastans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> seed,seedx,seedy;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;seed,&amp;seedx,&amp;seedy);</span><br><span class="line">    <span class="comment">//double ss=clock();</span></span><br><span class="line">    generate_array(n,seed);</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    generate_ask(n,m,seedx,seedy);</span><br><span class="line">    <span class="comment">//printf("%.0fms\n",clock()-ss);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二分+ST版：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> val[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;idx[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST_pre</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i][<span class="number">0</span>]=val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;t;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            f[i][j]=max(f[i][j<span class="number">-1</span>],f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ST_query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> max(f[l][k],f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x = seed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        val[i]=x%<span class="number">100</span>;</span><br><span class="line">        idx[val[i]].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> lastans=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_ask</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> seedx,<span class="keyword">int</span> seedy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x=seedx,y=seedy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        y ^= y &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> L=(x^lastans)%n+<span class="number">1</span>,R=(y^lastans)%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (L&gt;R) swap(L,R);</span><br><span class="line">        <span class="keyword">int</span> pos,Max=ST_query(L,R);</span><br><span class="line">        <span class="keyword">int</span> s=lower_bound(idx[Max].begin(),idx[Max].end(),L)-idx[Max].begin();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=s;k&lt;=idx[Max].size();k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(idx[Max][k]&gt;=L&amp;&amp;idx[Max][k]&lt;=R)&#123;</span><br><span class="line">                pos=idx[Max][k];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        lastans=pos;</span><br><span class="line">        ans^=lastans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> seed,seedx,seedy;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;seed,&amp;seedx,&amp;seedy);</span><br><span class="line">    <span class="comment">//double ss=clock();</span></span><br><span class="line">    generate_array(n,seed);</span><br><span class="line">    ST_pre();</span><br><span class="line">    generate_ask(n,m,seedx,seedy);</span><br><span class="line">    <span class="comment">//printf("%.0fms\n",clock()-ss);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化ST版：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson l,mid,o&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson mid+1,r,o&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> val[maxn];</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; f[maxn][<span class="number">20</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST_pre</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i][<span class="number">0</span>].first=i;</span><br><span class="line">        f[i][<span class="number">0</span>].second=val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;t;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-(<span class="number">1</span>&lt;&lt;j)+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//f[i][j]=max(f[i][j-1],f[i+(1&lt;&lt;j-1)][j-1]);</span></span><br><span class="line">            f[i][j] = f[i][j<span class="number">-1</span>].second &gt;= f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>].second ? f[i][j<span class="number">-1</span>]:f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ST_query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="built_in">log</span>(r-l+<span class="number">1</span>)/<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> f[l][k].second &gt;= f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k].second ? f[l][k].first : f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k].first;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x = seed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        val[i]=x%<span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> lastans=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generate_ask</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m,<span class="keyword">int</span> seedx,<span class="keyword">int</span> seedy)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x=seedx,y=seedy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; ++i) &#123;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        x ^= x &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        x ^= x &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">13</span>;</span><br><span class="line">        y ^= y &gt;&gt; <span class="number">17</span>;</span><br><span class="line">        y ^= y &lt;&lt; <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> L=(x^lastans)%n+<span class="number">1</span>,R=(y^lastans)%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (L&gt;R) swap(L,R);</span><br><span class="line">        <span class="keyword">int</span> pos=ST_query(L,R);</span><br><span class="line">        lastans=pos;</span><br><span class="line">        ans^=lastans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> seed,seedx,seedy;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;seed,&amp;seedx,&amp;seedy);</span><br><span class="line">    <span class="comment">//double ss=clock();</span></span><br><span class="line">    generate_array(n,seed);</span><br><span class="line">    ST_pre();</span><br><span class="line">    generate_ask(n,m,seedx,seedy);</span><br><span class="line">    <span class="comment">//printf("%.0fms\n",clock()-ss);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong>C 小睿睿的方案</strong></p></blockquote><p>To be continue…</p><p><br></p><p>这场Rating赛打得还是还算比较开心吧，学了一下ST表空间复杂度O(nlogn),区间查询O(1)很不错的算法，程序运算时间的计算和数组所占大概空间的计算，虽然理论课学了但一直没去实践QWQ另外牛客题目还不错~不说了EOJ的题还没补呢！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/371#question&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/371#question&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A  小睿睿的等式&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;有n根火柴棒，能摆成形如“A+B=n”的等式且使用的火柴棒数也恰好等于n/k的等式有多少种(B+A=n与A+B=n看作一种,“=”与“+”分别需要使用2根火柴棒,maxn=5e7)
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="OI" scheme="quincy.ink/tags/OI/"/>
    
      <category term="ST" scheme="quincy.ink/tags/ST/"/>
    
      <category term="线段树" scheme="quincy.ink/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="打表" scheme="quincy.ink/tags/%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛 40A--小D的剧场</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B-40A--%E5%B0%8FD%E7%9A%84%E5%89%A7%E5%9C%BA.html"/>
    <id>quincy.ink/牛客练习赛-40A--小D的剧场.html</id>
    <published>2019-02-16T11:26:46.000Z</published>
    <updated>2019-03-02T01:42:53.831Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>给出自然数1-49的49个数要求拼接成长度为n的序列，且要求任意相邻的三个不能为给出q个条件中任意一个条件的全排列，求所有合法序列数对 1e9+7 取模。</p><p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/369/A" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/369/A</a></p><p>Input:<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10 10 //n q</span><br><span class="line">18 3 3</span><br><span class="line">43 28 22</span><br><span class="line">42 28 3</span><br><span class="line">48 48 4</span><br><span class="line">29 9 31</span><br><span class="line">47 9 22</span><br><span class="line">1 22 49</span><br><span class="line">15 48 29</span><br><span class="line">2 8 27</span><br><span class="line">4 24 34</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">382785822</span><br></pre></td></tr></table></figure><p><strong>思路：</strong></p><p>设dp[i] [j] [k]为放到第i位时，a[i-1]=j, a[i]==k的状态，提前将不合法字段标记，转移方程：</p><script type="math/tex; mode=display">dp_{i,k,l} = \sum_{i=1}^{49} (!ban_{j,k,l})*dp_{i-1,j,k}</script><p>表示j,k,l可行时，可在 a[i-2]==j,a[i-1]==k的状态转移到 a[i-1]==k,a[i]==l的状态。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">505</span>][<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"><span class="keyword">bool</span> ban[<span class="number">50</span>][<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        ban[a][b][c]=ban[a][c][b]=<span class="literal">true</span>;</span><br><span class="line">        ban[b][a][c]=ban[b][c][a]=<span class="literal">true</span>;</span><br><span class="line">        ban[c][a][b]=ban[c][b][a]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">49</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">49</span>;j++)&#123;</span><br><span class="line">            dp[<span class="number">2</span>][i][j]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">49</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">49</span>;k++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=<span class="number">49</span>;l++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!ban[j][k][l])&#123;</span><br><span class="line">                        dp[i][k][l]=(dp[i][k][l]+dp[i<span class="number">-1</span>][j][k])%P;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">49</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">49</span>;j++)&#123;</span><br><span class="line">            ans=(ans+dp[n][i][j])%P;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给出自然数1-49的49个数要求拼接成长度为n的序列，且要求任意相邻的三个不能为给出q个条件中任意一个条件的全排列，求所有合法序列数对 1e9+7 取模。&lt;/p&gt;
&lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/369/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/369/A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Input:
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dp" scheme="quincy.ink/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>牛客练习赛 40C--小A与欧拉路</title>
    <link href="quincy.ink/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B-40C--%E5%B0%8FA%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B7%AF.html"/>
    <id>quincy.ink/牛客练习赛-40C--小A与欧拉路.html</id>
    <published>2019-02-16T08:08:43.000Z</published>
    <updated>2019-02-16T12:00:40.487Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>小A给你了一棵树，对于这棵树上的每一条边，你都可以将它复制任意（可以为0）次（即在这条边连接的两个点之间再加一条边权相同的边），求所有可能新形成的图中欧拉路的最短长度 </p><p>欧拉路：从图中任意一个点开始到图中任意一个点结束的路径，并且图中每条边只通过恰好一次。</p><p>原题链接：<a href="https://ac.nowcoder.com/acm/contest/369/C" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/369/C</a></p><p>Input：<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4 //n 树的点数</span><br><span class="line">1 2 1//u v w</span><br><span class="line">1 3 1</span><br><span class="line">1 4 2</span><br></pre></td></tr></table></figure><p>Output：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>思路：</strong></p><p>先考虑回路的情况。由于是一棵树，任两点间路径只有一条，从一条边走到深度更大的点，一定还会从同一条边返回以回到起点或者遍历其他子树，所以每条边需要复制一次，此时答案是边权和的两倍。</p><p>不是回路的情况可以减掉从终点回到起点的路径，要让这条路径尽量长，所以长度一定是直径的长度。</p><p>答案就是边权和的两倍减去直径长度。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EDGE</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,w,to;</span><br><span class="line">&#125;edge[maxn*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    edge[++cnt].next=head[u];</span><br><span class="line">    edge[cnt].to=v;</span><br><span class="line">    edge[cnt].w=w;</span><br><span class="line">    head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> pos,ans;</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pre)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=edge[i].next)&#123;</span><br><span class="line">        <span class="keyword">int</span> to=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(to==pre) <span class="keyword">continue</span>;</span><br><span class="line">        d[to]=d[x]+edge[i].w;</span><br><span class="line">        dfs(to,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d[x]&gt;ans)&#123;</span><br><span class="line">        ans=d[x];</span><br><span class="line">        pos=x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u,v,w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">        add(u,v,w);</span><br><span class="line">        add(v,u,w);</span><br><span class="line">        sum+=<span class="number">2</span>*w;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span>(d));</span><br><span class="line">    dfs(pos,<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum-ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小A给你了一棵树，对于这棵树上的每一条边，你都可以将它复制任意（可以为0）次（即在这条边连接的两个点之间再加一条边权相同的边），求所有可能新形成的图中欧拉路的最短长度 &lt;/p&gt;
&lt;p&gt;欧拉路：从图中任意一个点开始到图中任意一个点结束的路径，并且图中每条边只通过恰好一次。&lt;/p&gt;
&lt;p&gt;原题链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/369/C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ac.nowcoder.com/acm/contest/369/C&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Input：
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dfs" scheme="quincy.ink/tags/dfs/"/>
    
      <category term="欧拉路" scheme="quincy.ink/tags/%E6%AC%A7%E6%8B%89%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSU 1803--2016</title>
    <link href="quincy.ink/CSU%201803--2016.html"/>
    <id>quincy.ink/CSU 1803--2016.html</id>
    <published>2019-02-14T06:11:52.000Z</published>
    <updated>2019-03-03T03:19:53.525Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>求[l,r]之间有多少种a*b=2016的组合。</p><p><strong>思路：</strong><a id="more"></a></p><p>首先2016的1倍情况下有1*2016 , 2*1008 , 3*637… 等情况，2倍情况就是把a或b扩大2倍就行，那么我们可以把a看做[1,2016]的数，a’ 看做[2017,4032]的数，这样每次跨2016个数就知道有多少倍数了。最后两层for循环找出i*j==2016的时候把对应的倍数种类乘起来加到答案就行了。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    ll a[<span class="number">3000</span>],b[<span class="number">3000</span>];            <span class="comment">//a[i]储存n有多少个i*2016&lt;=n，b[i]....m</span></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        ll k=n/<span class="number">2016</span>;                <span class="comment">//有k个2016跨度</span></span><br><span class="line">        ll mm=n%<span class="number">2016</span>;               <span class="comment">//余下的等下都要+1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mm;i++)      a[i]=k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=mm+<span class="number">1</span>;i&lt;=<span class="number">2016</span>;i++)  a[i]=k;</span><br><span class="line"> </span><br><span class="line">        k=m/<span class="number">2016</span>;</span><br><span class="line">        mm=m%<span class="number">2016</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mm;i++)    b[i]=k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=mm+<span class="number">1</span>;i&lt;=<span class="number">2016</span>;i++)  b[i]=k;</span><br><span class="line"> </span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2016</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">2016</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((i*j)%<span class="number">2016</span>==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans+=(a[i]*b[j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;求[l,r]之间有多少种a*b=2016的组合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="数学" scheme="quincy.ink/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>ZOJ 4011--Happy-Sequence</title>
    <link href="quincy.ink/ZOJ%204011--Happy-Sequence.html"/>
    <id>quincy.ink/ZOJ 4011--Happy-Sequence.html</id>
    <published>2019-02-14T06:06:40.000Z</published>
    <updated>2019-02-16T08:19:11.447Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>给一个n和m，求所有组成m长且值在1-n内且满足 a[i]%a[i-1]==0 的序列方案数。</p><p><strong>思路：</strong><a id="more"></a></p><p>dp[i] [j] 表示长度为 i 的序列的最后一位为 j ,转移方程：dp[i] [j]=0 , dp[i] [j]+=dp[i-1] [ j的因子 ] 。因子可以通过埃氏筛打表得到，dp[m] [i]累加和即为答案，预处理2000*2000以内所有答案即可。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;y[N];         <span class="comment">//储存因子</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;=N; j+=i)</span><br><span class="line">        &#123;</span><br><span class="line">            y[j].push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=N; i++) dp[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=N; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;y[j].size(); k++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j]=(dp[i][j]+dp[i<span class="number">-1</span>][y[j][k]])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) ans=(ans+dp[m][i])%mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给一个n和m，求所有组成m长且值在1-n内且满足 a[i]%a[i-1]==0 的序列方案数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dp" scheme="quincy.ink/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>ZOJ 2594--Driving-Straight</title>
    <link href="quincy.ink/ZOJ%202594--Driving-Straight.html"/>
    <id>quincy.ink/ZOJ 2594--Driving-Straight.html</id>
    <published>2019-02-14T06:02:16.000Z</published>
    <updated>2019-03-08T12:49:21.593Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong></p><p>给出一个(2*m-1)*(2*n-1)的图，要求输出从左下角走到右上角最短距离走法的路径，只能在 ‘-’ 或 ‘|’ 上移动，答案保证有解，有多解输出任一，n,m&lt;=400。</p><p><strong>思路：</strong><a id="more"></a></p><p>因为题目要求输出路径，而bfs中如果每个状态都记录到当前状态的路径，可能会TLE或者MLE。</p><p>所以考虑先从终点开始bfs出每个点到终点的最短距离，然后再从起点出发bfs一直找 当前点的最短距离-1==下一步的最短距离 的位置就可以回到终点，注意方向的变换。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> mp[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">10</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;   <span class="comment">//反向由北到西顺时针 依次为0123</span></span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dd[<span class="number">10</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,   <span class="comment">// F</span></span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>&#125;,   <span class="comment">// L</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>&#125;    <span class="comment">// R</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> dir[<span class="number">10</span>]=&#123;<span class="string">'F'</span>,<span class="string">'L'</span>,<span class="string">'R'</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    node()&#123;&#125;</span><br><span class="line">    node(<span class="keyword">int</span> x,<span class="keyword">int</span> y):x(x),y(y)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;node&gt;q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    dis[<span class="number">1</span>][<span class="number">2</span>*n<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">    q.push(node(<span class="number">1</span>,<span class="number">2</span>*n<span class="number">-1</span>));</span><br><span class="line">    node now;</span><br><span class="line">    <span class="keyword">int</span> x,y,px,py;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        now=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        px=now.x,py=now.y;</span><br><span class="line">        <span class="comment">//printf("%d %d\n",px,py);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            x=px+dx[i];</span><br><span class="line">            y=py+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(mp[x][y]==<span class="string">'-'</span> || mp[x][y]==<span class="string">'|'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=dx[i];</span><br><span class="line">                y+=dy[i];</span><br><span class="line">                <span class="keyword">if</span>(dis[x][y]==<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[x][y]=dis[px][py]+<span class="number">1</span>;</span><br><span class="line">                    q.push(node(x,y));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> statu,x,y,px,py;</span><br><span class="line">    <span class="keyword">if</span>(mp[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">2</span>]==<span class="string">'-'</span> &amp;&amp; dis[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">1</span>]<span class="number">-1</span>==dis[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">3</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"E"</span>);</span><br><span class="line">        px=<span class="number">2</span>*m<span class="number">-1</span>,py=<span class="number">3</span>;</span><br><span class="line">        statu=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mp[<span class="number">2</span>*m<span class="number">-2</span>][<span class="number">1</span>]==<span class="string">'|'</span> &amp;&amp; dis[<span class="number">2</span>*m<span class="number">-1</span>][<span class="number">1</span>]<span class="number">-1</span>==dis[<span class="number">2</span>*m<span class="number">-3</span>][<span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"N"</span>);</span><br><span class="line">        px=<span class="number">2</span>*m<span class="number">-3</span>,py=<span class="number">1</span>;</span><br><span class="line">        statu=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(dis[px][py]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            x=px+dx[dd[i][statu]];</span><br><span class="line">            y=py+dy[dd[i][statu]];</span><br><span class="line">            <span class="keyword">if</span>(mp[x][y]==<span class="string">'-'</span> || mp[x][y]==<span class="string">'|'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x+=dx[dd[i][statu]];</span><br><span class="line">                y+=dy[dd[i][statu]];</span><br><span class="line">                <span class="keyword">if</span>(dis[x][y]==dis[px][py]<span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%c"</span>,dir[i]);</span><br><span class="line">                    statu=dd[i][statu];</span><br><span class="line">                    px=x,py=y;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">        <span class="built_in">memset</span>(mp,<span class="string">' '</span>,<span class="keyword">sizeof</span>(mp));</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">2</span>*m<span class="number">-1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            gets(mp[i]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        bfs();</span><br><span class="line">        <span class="comment">/*for(int i=1;i&lt;=2*m-1;i+=2)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            for(int j=1;j&lt;=2*n-1;j+=2)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                printf("%3d",dis[i][j]);</span></span><br><span class="line"><span class="comment">            &#125;puts("");</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        print();</span><br><span class="line">        <span class="keyword">if</span>(T) <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">4 4</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">      |</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">N</span></span><br><span class="line"><span class="comment">RFFLLFFRRFF</span></span><br><span class="line"><span class="comment">4 4</span></span><br><span class="line"><span class="comment">+-+ +-+</span></span><br><span class="line"><span class="comment">| |   |</span></span><br><span class="line"><span class="comment">+ +-+-+</span></span><br><span class="line"><span class="comment">|   | |</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">|     |</span></span><br><span class="line"><span class="comment">+-+-+-+</span></span><br><span class="line"><span class="comment">E</span></span><br><span class="line"><span class="comment">FFLFF</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给出一个(2*m-1)*(2*n-1)的图，要求输出从左下角走到右上角最短距离走法的路径，只能在 ‘-’ 或 ‘|’ 上移动，答案保证有解，有多解输出任一，n,m&amp;lt;=400。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="bfs" scheme="quincy.ink/tags/bfs/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces 110D--Lucky Probability</title>
    <link href="quincy.ink/Codeforces%20110D--Lucky%20Probability.html"/>
    <id>quincy.ink/Codeforces 110D--Lucky Probability.html</id>
    <published>2019-02-14T05:51:31.000Z</published>
    <updated>2019-02-16T08:20:09.847Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong> </p><p>出个两个（P,V）范围在1e9的正整数区间，分别从其中随机选出一个数，选出的两个数作为一个新区间的左右端点。要求新区间内的幸运数刚好为k个的概率（幸运数指一个数的数位只有4或7）。</p><p><strong>思路：</strong> <a id="more"></a><br>首先可以dfs找出所有在数据范围内的幸运数，记为L数组，因为数目不多，便可成k段遍历 L数组，每次分别计算【 L[i-1]+1，L[i]】与【Pl，Pr】的线段交集，和【 L[i+k-1]，L[i+k]-1】与【Vl，Vr】的线段交集，将两个结果相乘即是符合[i,i+k-1]区间幸运数的可能情况，同样的还要对P,V两个区间交换后在计算一遍，概率=所有可能情况/(Pr-Pl+1)/(Vr-Vl+1);然后还要注意k==1的情况会重复计算，需特判。</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll L[<span class="number">1050</span>];</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> len,<span class="keyword">int</span> p,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p==len)</span><br><span class="line">    &#123;</span><br><span class="line">        L[++num]=v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(len,p+<span class="number">1</span>,v*<span class="number">10</span>+<span class="number">4</span>);</span><br><span class="line">    dfs(len,p+<span class="number">1</span>,v*<span class="number">10</span>+<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">contain</span><span class="params">(ll x1,ll y1,ll x2,ll y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll l=max(x1,x2);</span><br><span class="line">    ll r=min(y1,y2);</span><br><span class="line">    <span class="keyword">return</span> r-l+<span class="number">1</span>&gt;<span class="number">0</span>?r-l+<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=<span class="number">9</span>;len++) dfs(len,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    L[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    L[++num]=<span class="number">1000000000</span>;</span><br><span class="line">    <span class="comment">//for(int i=1;i&lt;=num;i++) printf("%d  %lld\n",i,L[i]);</span></span><br><span class="line">    ll Pl,Pr,Vl,Vr;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%d"</span>,&amp;Pl,&amp;Pr,&amp;Vl,&amp;Vr,&amp;k);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1022</span>-k+<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j=i+k<span class="number">-1</span>;</span><br><span class="line">        sum+=contain(L[i<span class="number">-1</span>]+<span class="number">1</span>,L[i],Pl,Pr)*contain(L[j],L[j+<span class="number">1</span>]<span class="number">-1</span>,Vl,Vr);</span><br><span class="line">        <span class="keyword">if</span>(L[i]&gt;Pr) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1022</span>-k+<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j=i+k<span class="number">-1</span>;</span><br><span class="line">        sum+=contain(L[i<span class="number">-1</span>]+<span class="number">1</span>,L[i],Vl,Vr)*contain(L[j],L[j+<span class="number">1</span>]<span class="number">-1</span>,Pl,Pr);</span><br><span class="line">        <span class="keyword">if</span>(L[i]&gt;Vr) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1022</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(contain(L[i],L[i],Pl,Pr)&amp;&amp;contain(L[i],L[i],Vl,Vr)) sum--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,sum*<span class="number">1.0</span>/(Vr-Vl+<span class="number">1</span>)/(Pr-Pl+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;出个两个（P,V）范围在1e9的正整数区间，分别从其中随机选出一个数，选出的两个数作为一个新区间的左右端点。要求新区间内的幸运数刚好为k个的概率（幸运数指一个数的数位只有4或7）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="dfs" scheme="quincy.ink/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>POJ 2774--Long Long Message</title>
    <link href="quincy.ink/POJ%202774--Long%20Long%20Message.html"/>
    <id>quincy.ink/POJ 2774--Long Long Message.html</id>
    <published>2019-02-13T11:51:55.000Z</published>
    <updated>2019-02-16T08:19:43.247Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题意：</strong><br>给出两个最长长为1e5的字符串，求他们的最长公共子串长度。</p><p><strong>思路：</strong><a id="more"></a></p><p>分别将两个字符串预处理出hash值，二分【1-min（lens，lent）】的长度，check函数中每次将长度为mid的hash值记录并检查是否符合条件，是则下边界右移，否则上边界左移。复杂度O(nlogn)</p><p><strong>代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N =<span class="number">100000</span>+<span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> s[N],t[N];</span><br><span class="line"><span class="keyword">int</span> lens,lent;</span><br><span class="line">ull base=<span class="number">233</span>;</span><br><span class="line">ull p[N],hs[N],ht[N];</span><br><span class="line"><span class="function">ull <span class="title">geths</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hs[r]-p[r-l+<span class="number">1</span>]*hs[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ull <span class="title">getht</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ht[r]-p[r-l+<span class="number">1</span>]*ht[l<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ull&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lens-len+<span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ull tmp=geths(i,i+len<span class="number">-1</span>);</span><br><span class="line">        mp.push_back(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(mp.begin(),mp.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lent-len+<span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ull tmp=getht(i,i+len<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span>(binary_search(mp.begin(),mp.end(),tmp)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line">    p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;N; i++) p[i]=p[i<span class="number">-1</span>]*base;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s+<span class="number">1</span>,t+<span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        lens=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        lent=<span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lens; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            hs[i]=hs[i<span class="number">-1</span>]*base+s[i]-<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=lent; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ht[i]=ht[i<span class="number">-1</span>]*base+t[i]-<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">1</span>,r=min(lens,lent),mid;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">        &#123;</span><br><span class="line">            mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid)) l=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span>        r=mid<span class="number">-1</span>;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;题意：&lt;/strong&gt;&lt;br&gt;给出两个最长长为1e5的字符串，求他们的最长公共子串长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;
    
    </summary>
    
      <category term="ACM" scheme="quincy.ink/categories/ACM/"/>
    
    
      <category term="二分" scheme="quincy.ink/tags/%E4%BA%8C%E5%88%86/"/>
    
      <category term="字符串hash" scheme="quincy.ink/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2hash/"/>
    
  </entry>
  
</feed>
